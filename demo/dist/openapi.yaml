---
swagger: "2.0"
info:
  version: 1.5.0
  title: POS Payment API-Global
  termsOfService: https://localhost
  license:
    name: License
    url: https://localhost
  x-ibm-name: pospayment-global
  description: ""
host: localhost
basePath: /payments/pos
tags:
- name: Orders
- name: Order Completions
- name: Payment Confirmations
- name: Receipt Voids
- name: Receipt Void Confirmations
- name: Item Refunds
- name: Item Refund Completions
- name: Refund Confirmation
- name: Health
- name: Order Status
consumes:
- application/json;version=1.0
produces:
- application/json;version=1.0
security:
- Client ID: []
  Client Secret: []
paths:
  /{region}/{storeId}/orders:
    post:
      tags:
      - Orders
      summary: Create an order with the submitted basket. (The order ID is returned
        by the server.)
      operationId: createOrder
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - in: body
        name: basket
        description: The basket.
        required: true
        schema:
          $ref: '#/definitions/BasketRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/OrderResponse'
        400:
          description: Bad request
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>400 - Bad request
                errorId: []
                errorMessage:
                  description: The error message.<br>2 - Any required input is missing
                    in the request.<br>10 - The format of any input value is invalid.<br>8
                    - The specified barcodes list is empty.<br>11 - The specified
                    sales area is not supported.<br>12 - The specified sales condition
                    is not supported.
        401:
          description: Unauthorized
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>401 - Unauthorized
                errorId: []
                errorMessage:
                  description: The error message.<br>4 - The specified clientName
                    isn't allowed to send requests.<br>9 - Access denied.
        404:
          description: Not found
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>404 - Not found
                errorId: []
                errorMessage:
                  description: The error message.
        500:
          description: Internal server error
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>500 - Internal
                    server error
                errorId: []
                errorMessage:
                  description: The error message.<br>1 - An internal server error
                    occurred.<br>3 - The store ID doesn't match the local store.<br>7
                    - The referenced basket has a wrong status.
        503:
          description: Service unavailable
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>503 - Service
                    unavailable
                errorId: []
                errorMessage:
                  description: The error message.<br>6 - The Webservice is blocked
                    via 'End of day' handling.
  /{region}/{storeId}/orders/{orderId}:
    put:
      tags:
      - Orders
      summary: Update (replace) the basket of the order with the submitted ID.
      operationId: updateOrder
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - name: orderId
        in: path
        description: The ID of the order to update (replace).
        required: true
        type: string
        format: uuid
      - in: body
        name: basketReplacement
        description: The basket replacement.
        required: true
        schema:
          allOf:
          - type: object
            required:
            - appName
            - clientName
            properties:
              appName:
                type: string
                description: The name of the calling app.
              clientName:
                type: string
                description: The name of the calling client, mapped to a workstation,
                  configured in iPOS.
            description: The abstract request type.
          - allOf:
            - type: object
              required:
              - orderId
              properties:
                orderId:
                  type: string
                  format: uuid
                  description: The ID of the order, assigned and used by this API.
              description: The ID of the order.
            - type: object
              required:
              - barcodes
              - salesArea
              - salesCondition
              properties:
                externalOrderId:
                  type: string
                  description: The ID of the order, assigned and used by caller, used
                    by this API for tracking only.
                  maxLength: 50
                salesArea:
                  type: string
                  description: The area where the basket is sold, mapped to a workstation
                    group, configured in iPOS.
                  enum:
                  - BISTRO
                  - CAFEBAR
                  - COWORKREST
                  - REGULAR
                  - RESTAURANT
                  - SFMARKET
                salesCondition:
                  type: string
                  description: The sales condition.
                  enum:
                  - TAKEAWAY
                  - EATIN
                barcodes:
                  type: array
                  description: The barcodes.
                  items:
                    type: object
                    required:
                    - barcode
                    - quantity
                    properties:
                      barcode:
                        type: string
                        description: The barcode.
                      quantity:
                        type: number
                        format: decimal
                        description: The barcode quantity.
                    description: An element of the barcodes in the basket.
              description: The basket with barcodes.
            description: The basket to replace with barcodes.
          description: The basket request for order update (replacement).
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/OrderResponse'
        400:
          description: Bad request
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>400 - Bad request
                errorId: []
                errorMessage:
                  description: The error message.<br>2 - Any required input is missing
                    in the request.<br>10 - The format of any input value is invalid.<br>8
                    - The specified barcodes list is empty.<br>11 - The specified
                    sales area is not supported.<br>12 - The specified sales condition
                    is not supported.
        401:
          description: Unauthorized
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>401 - Unauthorized
                errorId: []
                errorMessage:
                  description: The error message.<br>4 - The specified clientName
                    isn't allowed to send requests.<br>9 - Access denied.
        404:
          description: Not found
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>404 - Not found
                errorId: []
                errorMessage:
                  description: The error message.
        500:
          description: Internal server error
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>500 - Internal
                    server error
                errorId: []
                errorMessage:
                  description: The error message.<br>1 - An internal server error
                    occurred.<br>3 - The store ID doesn't match the local store.<br>7
                    - The referenced basket has a wrong status.
        503:
          description: Service unavailable
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>503 - Service
                    unavailable
                errorId: []
                errorMessage:
                  description: The error message.<br>6 - The Webservice is blocked
                    via 'End of day' handling.
    delete:
      tags:
      - Orders
      summary: Delete the order with the submitted ID.
      operationId: deleteOrder
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - name: orderId
        in: path
        description: The ID of the order to delete.
        required: true
        type: string
        format: uuid
      - in: body
        name: basket
        description: The basket.
        required: true
        schema:
          allOf:
          - type: object
            required:
            - appName
            - clientName
            properties:
              appName:
                type: string
                description: The name of the calling app.
              clientName:
                type: string
                description: The name of the calling client, mapped to a workstation,
                  configured in iPOS.
            description: The abstract request type.
          - type: object
            required:
            - orderId
            properties:
              orderId:
                type: string
                format: uuid
                description: The ID of the order, assigned and used by this API.
            description: The ID of the order.
          description: The request with order ID only.
      responses:
        200:
          description: Success
          schema:
            type: object
            required:
            - code
            properties:
              code:
                type: integer
                format: int32
                description: The code. Equals HTML status code.<br>200 - Success
                enum:
                - 200
            description: The SUCCESS response. Code equals HTML status code.<br>200
              - Success
        400:
          description: Bad request
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>400 - Bad request
                errorId: []
                errorMessage:
                  description: The error message.<br>2 - Any required input is missing
                    in the request.<br>10 - The format of any input value is invalid.
        401:
          description: Unauthorized
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>401 - Unauthorized
                errorId: []
                errorMessage:
                  description: The error message.<br>4 - The specified clientName
                    isn't allowed to send requests.<br>9 - Access denied.
        404:
          description: Not found
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>404 - Not found
                errorId: []
                errorMessage:
                  description: The error message.
        500:
          description: Internal server error
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>500 - Internal
                    server error
                errorId: []
                errorMessage:
                  description: The error message.<br>1 - An internal server error
                    occurred.<br>3 - The store ID doesn't match the local store.<br>7
                    - The referenced basket has a wrong status.
        503:
          description: Service unavailable
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>503 - Service
                    unavailable
                errorId: []
                errorMessage:
                  description: The error message.<br>6 - The Webservice is blocked
                    via 'End of day' handling.
  /{region}/{storeId}/order-completions:
    post:
      tags:
      - Order Completions
      summary: Complete the order.
      operationId: completeOrder
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - in: body
        name: orderCompletion
        description: The order completion.
        required: true
        schema:
          allOf:
          - type: object
            required:
            - appName
            - clientName
            properties:
              appName:
                type: string
                description: The name of the calling app.
              clientName:
                type: string
                description: The name of the calling client, mapped to a workstation,
                  configured in iPOS.
            description: The abstract request type.
          - allOf:
            - type: object
              required:
              - orderId
              - paymentLocation
              properties:
                orderId:
                  type: string
                  format: uuid
                  description: The ID of the order, assigned and used by this API.
                paymentLocation:
                  type: string
                  description: 'The payment location.<br>- ''till'': The basket will
                    be stored for later checkout/payment at the till.<br>- ''external'':
                    There will be performed an external payment.'
                  enum:
                  - external
                  - till
                notifications:
                  type: array
                  items:
                    type: object
                    required:
                    - type
                    - dataVariant
                    - data
                    properties:
                      type:
                        type: string
                      dataVariant:
                        type: string
                      data:
                        type: string
                platform:
                  type: string
                  maxLength: 128
                  description: The platform performing the request.
                device:
                  type: string
                  maxLength: 128
                  description: The device performing the request.
                appOS:
                  type: string
                  maxLength: 128
                  description: The operating system performing the request.
                channel:
                  type: string
                  maxLength: 128
                  description: The channel the request gets performed in.
                journey:
                  type: string
                  maxLength: 128
                  description: The journey the request is requested in.
            description: The completion of the order.
          description: The order completion request.
      responses:
        200:
          description: Success
          schema:
            allOf:
            - type: object
              required:
              - code
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>200 - Success
                  enum:
                  - 200
              description: The SUCCESS response. Code equals HTML status code.<br>200
                - Success
            - type: object
              properties:
                total:
                  type: number
                  format: decimal
                  description: The price of the order, the customer has to pay.<br>-
                    Filled only, if payment location is 'external'.
                availablePaymentTenders:
                  type: array
                  description: The list of allowed payment tenders.<br>- Filled only,
                    if payment location is 'external'.
                  items:
                    type: object
                    required:
                    - description
                    - externalId
                    properties:
                      externalId:
                        type: string
                        description: The external ID of the tender.
                      description:
                        type: string
                        description: The description of the tender.
                    description: The payment tender
                basketBarcode:
                  type: string
                  description: The barcode for the later checkout of the basket at
                    the till.<br>- Filled only, if payment location  is 'till'.
              description: The instruction for payment of the completed order.
            description: The payment instruction response.
        400:
          description: Bad request
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>400 - Bad request
                errorId: []
                errorMessage:
                  description: The error message.<br>2 - Any required input is missing
                    in the request.<br>10 - The format of any input value is invalid.<br>1001
                    - External payment is not allowed for this basket.
                externalPaymentNotAllowedReasons:
                  type: array
                  description: The reasons for the case that an external payment is
                    initiated but not allowed (Error ID 1001).
                  items:
                    type: object
                    required:
                    - reasonId
                    - reasonMessage
                    properties:
                      reasonId:
                        type: integer
                        format: int32
                        description: The ID of the reason.
                        enum:
                        - 1
                        - 2
                      reasonMessage:
                        type: string
                        description: The message of the reason. The listed values
                          represent the untranslated fallback message in country-unspecific
                          english (en-LD), if the translation is not possible.<br>1
                          - Any barcode(s) of this basket could not be processed.<br>2
                          - Any indirect discount applies to this basket.
                    description: The reason for not allowed external payment.
        401:
          description: Unauthorized
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>401 - Unauthorized
                errorId: []
                errorMessage:
                  description: The error message.<br>4 - The specified clientName
                    isn't allowed to send requests.<br>9 - Access denied.
        404:
          description: Not found
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>404 - Not found
                errorId: []
                errorMessage:
                  description: The error message.
        500:
          description: Internal server error
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>500 - Internal
                    server error
                errorId: []
                errorMessage:
                  description: The error message.<br>1 - An internal server error
                    occurred.<br>3 - The store ID doesn't match the local store.<br>7
                    - The referenced basket has a wrong status.<br>5 - The basket
                    isn't available in the cache anymore. Re-send the basket via SendTransactionData.
        503:
          description: Service unavailable
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>503 - Service
                    unavailable
                errorId: []
                errorMessage:
                  description: The error message.<br>6 - The Webservice is blocked
                    via 'End of day' handling.
  /{region}/{storeId}/payment-confirmations:
    post:
      tags:
      - Payment Confirmations
      summary: Confirm the payment for the order and get the receipt.
      operationId: confirmPayment
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - in: body
        name: paymentConfirmation
        description: The payment confirmation.
        required: true
        schema:
          allOf:
          - type: object
            required:
            - appName
            - clientName
            properties:
              appName:
                type: string
                description: The name of the calling app.
              clientName:
                type: string
                description: The name of the calling client, mapped to a workstation,
                  configured in iPOS.
            description: The abstract request type.
          - allOf:
            - type: object
              required:
              - orderId
              properties:
                orderId:
                  type: string
                  format: uuid
                  description: The ID of the order, assigned and used by this API.
              description: The ID of the order.
            - required:
              - paymentDetails
              - paymentStatus
              - total
              properties:
                paymentStatus:
                  type: string
                  description: The final status of the payment. Only in case of 'PAID'
                    the payment is treated as successful and will be booked.
                  enum:
                  - CANCELLED_BY_USER
                  - TECHNICAL_ERROR
                  - PAID
                  - REFUNDED
                total:
                  type: number
                  format: decimal
                  description: The price of the order, the customer has/had to pay
                    finally. Will be used for consistency checks.
                paymentDetails:
                  type: array
                  description: The list of payment details. Has to contain used tenders
                    only. Has to be empty if payment status is not 'PAID'.
                  items:
                    type: object
                    required:
                    - amount
                    - externalId
                    - verifications
                    properties:
                      externalId:
                        type: string
                        description: The external ID of the tender.
                      additionalInfoValue:
                        type: string
                        description: The optional value of additional information.
                          May be used in case an additional information should be
                          reported for the actual payment. The value will be reported
                          in PosLog.
                        maxLength: 300
                      amount:
                        type: number
                        format: decimal
                        description: The paid amount using this tender.
                      verifications:
                        type: array
                        description: The list of verification information for this
                          tender.
                        items:
                          type: object
                          required:
                          - name
                          - value
                          properties:
                            name:
                              type: string
                              description: The name of the verification information.
                            value:
                              type: string
                              description: The value of the verification information.
                          description: The payment tender verification information.
                    description: The payment detail.
            description: The payment confirmation.
          description: The payment confirmation request.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/PaymentConfirmResponse'
        400:
          description: Bad request
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>400 - Bad request
                errorId: []
                errorMessage:
                  description: The error message.<br>2 - Any required input is missing
                    in the request.<br>10 - The format of any input value is invalid.<br>13
                    - The specified basket GUID is unknown.<br>14 - The totals and
                    sum of used payment tender amounts are inconsistent.<br>15 - Any
                    of the specified payment tenders is not supported.<br>16 - Payment
                    tender verification failed.<br>18 - The specified paymentStatus
                    is not valid.
        401:
          description: Unauthorized
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>401 - Unauthorized
                errorId: []
                errorMessage:
                  description: The error message.<br>4 - The specified clientName
                    isn't allowed to send requests.<br>9 - Access denied.
        404:
          description: Not found
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>404 - Not found
                errorId: []
                errorMessage:
                  description: The error message.
        500:
          description: Internal server error
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>500 - Internal
                    server error
                errorId: []
                errorMessage:
                  description: The error message.<br>1 - An internal server error
                    occurred.<br>3 - The store ID doesn't match the local store.<br>7
                    - The referenced basket has a wrong status.
        503:
          description: Service unavailable
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>503 - Service
                    unavailable
                errorId: []
                errorMessage:
                  description: The error message.<br>6 - The Webservice is blocked
                    via 'End of day' handling.
  /{region}/{storeId}/receipt-voids:
    post:
      tags:
      - Receipt Voids
      summary: Void the receipt.
      operationId: voidReceipt
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - in: body
        name: orderId
        description: The order ID.
        required: true
        schema:
          allOf:
          - type: object
            required:
            - appName
            - clientName
            properties:
              appName:
                type: string
                description: The name of the calling app.
              clientName:
                type: string
                description: The name of the calling client, mapped to a workstation,
                  configured in iPOS.
            description: The abstract request type.
          - type: object
            required:
            - orderId
            properties:
              orderId:
                type: string
                format: uuid
                description: The ID of the order, assigned and used by this API.
            description: The ID of the order.
          description: The request with order ID only.
      responses:
        200:
          description: Success
          schema:
            allOf:
            - type: object
              required:
              - code
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>200 - Success
                  enum:
                  - 200
              description: The SUCCESS response. Code equals HTML status code.<br>200
                - Success
            - type: object
              required:
              - availablePaymentTenders
              - availableReasonCodes
              - total
              properties:
                total:
                  type: number
                  format: decimal
                  description: The total amount that needs to be booked back for the
                    voided receipt. Negative value.
                  maximum: 0
                availablePaymentTenders:
                  type: array
                  description: The list of allowed payment tenders.
                  items:
                    type: object
                    required:
                    - description
                    - externalId
                    properties:
                      externalId:
                        type: string
                        description: The external ID of the tender.
                      description:
                        type: string
                        description: The description of the tender.
                    description: The payment tender
                availableReasonCodes:
                  type: array
                  description: The list of available reason codes(s) for the void
                    of the receipt. The caller has to select the fitting one and has
                    to use it in the void receipt confirmation.
                  items:
                    type: object
                    required:
                    - reasonCode
                    - reasonMessage
                    properties:
                      reasonCode:
                        type: integer
                        format: int32
                        description: The code of the reason.
                      reasonMessage:
                        type: string
                        description: The translated message of the reason.
                    description: The reason code for the void of a receipt.
              description: The instruction for the void of the receipt.
            description: The void receipt instruction response.
        400:
          description: Bad request
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>400 - Bad request
                errorId: []
                errorMessage:
                  description: The error message.<br>2 - Any required input is missing
                    in the request.<br>10 - The format of any input value is invalid.<br>13
                    - The specified basket GUID is unknown.<br>1002 - An external
                    void receipt isn’t allowed for this basket.
                externalVoidReceiptNotAllowedReasons:
                  type: array
                  description: The reasons for the case that an external void is initiated
                    but not allowed. (Error ID 1002).
                  items:
                    type: object
                    required:
                    - reasonId
                    - reasonMessage
                    properties:
                      reasonId:
                        type: integer
                        format: int32
                        description: The ID of the reason.
                        enum:
                        - 1
                        - 2
                        - 3
                        - 4
                      reasonMessage:
                        type: string
                        description: The message of the reason. The listed values
                          represent the untranslated fallback message in country-unspecific
                          english (en-LD), if the translation is not possible.<br>1
                          - The basket has been paid at a till. Voiding the receipt
                          is only possible at a till.<br>2 - The basket has already
                          been voided.<br>3 - The basket cannot be voided as it contains
                          items that are not allowed to be voided.<br> 4 - The basket
                          cannot be voided as at least one contained item has already
                          been refunded.
                    description: The reason for not allowed external void of the receipt.
        401:
          description: Unauthorized
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>401 - Unauthorized
                errorId: []
                errorMessage:
                  description: The error message.<br>4 - The specified clientName
                    isn't allowed to send requests.<br>9 - Access denied.
        404:
          description: Not found
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>404 - Not found
                errorId: []
                errorMessage:
                  description: The error message.
        500:
          description: Internal server error
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>500 - Internal
                    server error
                errorId: []
                errorMessage:
                  description: The error message.<br>1 - An internal server error
                    occurred.<br>3 - The store ID doesn't match the local store.<br>7
                    - The referenced basket has a wrong status.
        503:
          description: Service unavailable
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>503 - Service
                    unavailable
                errorId: []
                errorMessage:
                  description: The error message.<br>6 - The Webservice is blocked
                    via 'End of day' handling.
  /{region}/{storeId}/receipt-void-confirmations:
    post:
      tags:
      - Receipt Void Confirmations
      summary: Confirm the void of the receipt and get the receipt.
      operationId: confirmVoidReceipt
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - in: body
        name: voidReceiptConfirmation
        description: The void receipt confirmation.
        required: true
        schema:
          allOf:
          - type: object
            required:
            - appName
            - clientName
            properties:
              appName:
                type: string
                description: The name of the calling app.
              clientName:
                type: string
                description: The name of the calling client, mapped to a workstation,
                  configured in iPOS.
            description: The abstract request type.
          - allOf:
            - type: object
              required:
              - orderId
              properties:
                orderId:
                  type: string
                  format: uuid
                  description: The ID of the order, assigned and used by this API.
              description: The ID of the order.
            - allOf:
              - type: object
                required:
                - orderId
                properties:
                  orderId:
                    type: string
                    format: uuid
                    description: The ID of the order, assigned and used by this API.
                description: The ID of the order.
              - required:
                - paymentDetails
                - paymentStatus
                - total
                properties:
                  paymentStatus:
                    type: string
                    description: The final status of the payment. Only in case of
                      'PAID' the payment is treated as successful and will be booked.
                    enum:
                    - CANCELLED_BY_USER
                    - TECHNICAL_ERROR
                    - PAID
                    - REFUNDED
                  total:
                    type: number
                    format: decimal
                    description: The price of the order, the customer has/had to pay
                      finally. Will be used for consistency checks.
                  paymentDetails:
                    type: array
                    description: The list of payment details. Has to contain used
                      tenders only. Has to be empty if payment status is not 'PAID'.
                    items:
                      type: object
                      required:
                      - amount
                      - externalId
                      - verifications
                      properties:
                        externalId:
                          type: string
                          description: The external ID of the tender.
                        additionalInfoValue:
                          type: string
                          description: The optional value of additional information.
                            May be used in case an additional information should be
                            reported for the actual payment. The value will be reported
                            in PosLog.
                          maxLength: 300
                        amount:
                          type: number
                          format: decimal
                          description: The paid amount using this tender. Negative
                            value.
                        verifications:
                          type: array
                          description: The list of verification information for this
                            tender.
                          items:
                            type: object
                            required:
                            - name
                            - value
                            properties:
                              name:
                                type: string
                                description: The name of the verification information.
                              value:
                                type: string
                                description: The value of the verification information.
                            description: The payment tender verification information.
                      description: The payment detail.
              description: The payment confirmation.
            - required:
              - reasonCode
              properties:
                paymentStatus:
                  description: The final status of the external receipt void. Only
                    in case of 'REFUNDED' the receipt void is treated as successful
                    and will be booked.
                total:
                  description: The total amount that has been refunded for the receipt
                    void. Will be used for consistency checks. Negative value.
                paymentDetails:
                  description: The list of payment details. Has to contain used tenders
                    only. Has to be empty if payment status is not 'REFUNDED'.
                reasonCode:
                  type: integer
                  format: int32
                  description: The reasonCode for the receipt void that the caller
                    has selected. If the payment status is not 'REFUNDED', a '0' needs
                    to be sent.
            description: The void receipt confirmation.
          description: The void receipt confirmation request.
      responses:
        200:
          description: Success
          schema:
            allOf:
            - type: object
              required:
              - code
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>200 - Success
                  enum:
                  - 200
              description: The SUCCESS response. Code equals HTML status code.<br>200
                - Success
            - type: object
              required:
              - printBuffer
              properties:
                printBuffer:
                  type: string
                  format: byte
                  description: The base64-encoded print buffer of the receipt. If
                    the payment status of called function does not indicate successful
                    operation, the print buffer contains an empty string.
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              description: The receipt.
            description: The receipt response.
        400:
          description: Bad request
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>400 - Bad request
                errorId: []
                errorMessage:
                  description: The error message.<br>2 - Any required input is missing
                    in the request.<br>10 - The format of any input value is invalid.<br>13
                    - The specified basket GUID is unknown.<br>14 - The totals and
                    sum of used payment tender amounts are inconsistent.<br>15 - Any
                    of the specified payment tenders is not supported.<br>16 - Payment
                    tender verification failed.<br>17 - The specified reasonCode is
                    not valid.<br>18 - The specified paymentStatus is not valid.
        401:
          description: Unauthorized
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>401 - Unauthorized
                errorId: []
                errorMessage:
                  description: The error message.<br>4 - The specified clientName
                    isn't allowed to send requests.<br>9 - Access denied.
        404:
          description: Not found
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>404 - Not found
                errorId: []
                errorMessage:
                  description: The error message.
        500:
          description: Internal server error
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>500 - Internal
                    server error
                errorId: []
                errorMessage:
                  description: The error message.<br>1 - An internal server error
                    occurred.<br>3 - The store ID doesn't match the local store.<br>7
                    - The referenced basket has a wrong status.
        503:
          description: Service unavailable
          schema:
            allOf:
            - type: object
              required:
              - code
              - errorId
              - errorMessage
              properties:
                code:
                  type: integer
                  format: int32
                  description: The code. Equals HTML status code.<br>400 - Bad request<br>401
                    - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
                    - Server unavailable
                  enum:
                  - 400
                  - 401
                  - 404
                  - 500
                  - 503
                errorId:
                  type: integer
                  format: int32
                  description: The error ID.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                  - 14
                  - 15
                  - 16
                  - 17
                  - 18
                  - 1001
                  - 1002
                errorMessage:
                  type: string
                  description: The error message.<br>1 - An internal server error
                    occurred. (500)<br>2 - Any required input is missing in the request.
                    (400)<br>3 - The store ID doesn't match the local store. (500)<br>4
                    - The specified clientName isn't allowed to send requests. (401)<br>5
                    - The basket isn't available in the cache anymore. Re-send the
                    basket via SendTransactionData. (500)<br>6 - The Webservice is
                    blocked via 'End of day' handling. (503)<br>7 - The referenced
                    basket has a wrong status. (500)<br>8 - The specified barcodes
                    list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format
                    of any input value is invalid. (400)<br>11 - The specified sales
                    area is not supported. (400)<br>12 - The specified sales condition
                    is not supported. (400)<br>13 - The specified basket GUID is unknown.
                    (400)<br>14 - The totals and sum of used payment tender amounts
                    are inconsistent. (400)<br>15 - Any of the specified payment tenders
                    is not supported. (400)<br>16 - Payment tender verification failed.
                    (400)<br>17 - The specified reasonCode is not valid. (400)<br>18
                    - The specified paymentStatus is not valid. (400)<br>1001 - External
                    payment is not allowed for this basket. (400)<br>1002 - An external
                    void receipt isn’t allowed for this basket. (400)
              description: The response. Code equals HTML status code. Contains additional
                error ID and server logic dependent status/error messages.
            - properties:
                code:
                  description: The code. Equals HTML status code.<br>503 - Service
                    unavailable
                errorId: []
                errorMessage:
                  description: The error message.<br>6 - The Webservice is blocked
                    via 'End of day' handling.
  /{region}/{storeId}/item-refunds:
    post:
      tags:
      - Item Refunds
      summary: Create refund item
      operationId: createRefundItem
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - name: createItemRefund
        in: body
        description: The item refund request.
        required: true
        schema:
          $ref: '#/definitions/CreateItemRefundRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ItemRefundResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ResponseBadRequestRefundItem'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ResponseNotFound'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ResponseInternalServerError'
        503:
          description: Service unavailable
          schema:
            $ref: '#/definitions/ResponseServiceUnavailable'
    put:
      tags:
      - Item Refunds
      summary: Update refund item
      operationId: updateRefundItem
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - name: updateItemRefund
        in: body
        description: The item refund request.
        required: true
        schema:
          $ref: '#/definitions/UpdateItemRefundRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ItemRefundResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ResponseBadRequestRefundItem'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ResponseNotFound'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ResponseInternalServerError'
        503:
          description: Service unavailable
          schema:
            $ref: '#/definitions/ResponseServiceUnavailable'
  /{region}/{storeId}/item-refund-completions:
    post:
      tags:
      - Item Refund Completions
      summary: Complete refund item.
      operationId: completeRefundItem
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - name: itemRefundCompletion
        in: body
        description: The item refund completion request.
        required: true
        schema:
          $ref: '#/definitions/ItemRefundCompletionRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ItemRefundCompletionResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ResponseBadRequestCompleteRefundItem'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ResponseNotFound'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ResponseInternalServerError'
        503:
          description: Service unavailable
          schema:
            $ref: '#/definitions/ResponseServiceUnavailable'
  /{region}/{storeId}/refund-confirmations:
    post:
      tags:
      - Refund Confirmation
      summary: Confirm refund.
      operationId: confirmRefund
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - name: refundConfirmation
        in: body
        description: Refund confirmation request.
        required: true
        schema:
          $ref: '#/definitions/RefundConfirmationRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/RefundConfirmationResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ResponseBadRequestConfirmRefund'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ResponseNotFound'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ResponseInternalServerError'
        503:
          description: Service unavailable
          schema:
            $ref: '#/definitions/ResponseServiceUnavailable'
  /{region}/{storeId}/health:
    post:
      tags:
      - Health
      summary: Health check.
      operationId: health
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - name: health
        in: body
        description: Health check.
        required: true
        schema:
          $ref: '#/definitions/AbstractRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ResponseSuccess'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ResponseBadRequestCheckHealth'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ResponseNotFound'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ResponseInternalServerError'
        503:
          description: Service unavailable
          schema:
            $ref: '#/definitions/ResponseServiceUnavailable'
  /{region}/{storeId}/order-status:
    post:
      tags:
      - Order Status
      summary: Order status.
      operationId: orderStatus
      parameters:
      - name: cc
        in: header
        description: The country code.
        required: true
        type: string
      - name: lc
        in: header
        description: The language code.
        required: true
        type: string
      - name: region
        type: string
        required: true
        in: path
        description: The Region
      - name: storeId
        in: path
        description: The store ID.
        required: true
        type: integer
        format: int32
      - name: orderStatus
        in: body
        description: Order status request.
        required: true
        schema:
          $ref: '#/definitions/OrderStatusRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/OrderStatusResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ResponseBadRequestOrderStatus'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ResponseUnauthorized'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ResponseNotFound'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ResponseInternalServerError'
        503:
          description: Service unavailable
          schema:
            $ref: '#/definitions/ResponseServiceUnavailable'
securityDefinitions:
  Client ID:
    description: ""
    in: header
    name: X-IBM-Client-Id
    type: apiKey
  Client Secret:
    type: apiKey
    name: X-IBM-Client-Secret
    in: header
    description: ""
definitions:
  OrderStatusResponseIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
      errorMessage:
        type: string
      transactionStatus:
        type: string
      kdsOrderId:
        type: string
      issuedCoupons:
        type: array
        items:
          properties:
            barcode:
              type: string
            message:
              type: string
          type: object
      printBuffers:
        type: array
        items:
          type: object
          properties:
            printBuffer:
              type: string
    example: "{\n  \"result\":\"SUCCESS\",\n  \"errorId\":0,\n \"kdsOrderId\":\"KdsOrderIdExample\",\n
      \ \"errorMessage\":\"SUCCESS\",\n  \"transactionStatus\": \"\",\n  \"printBuffers\":
      [{\n      \"printBuffer\": \"\"\n  }]\n}        "
  OrderStatusRequestIPOS:
    type: object
    properties:
      clientId:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      workflow:
        type: string
      transactionGuid:
        type: string
    example: "{\n  \"clientId\":\"storeapp_v2\",\n  \"clientName\":\"StoreApp_WS\",\n
      \ \"languageCulture\":\"de-DE\",\n  \"consumer\":\"ABCD\",\n  \"contract\":\"12345\",\n
      \ \"storeId\":\"345\",\n  \"transactionGuid\":\"3BBD4488-67B5-4246-87A5-284AB472DA8B\",\n}
      \       "
  AbstractRequestIPOS:
    type: object
    properties:
      clientId:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      workflow:
        type: string
  RefundConfirmationResponseIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
      errorMessage:
        type: string
      printBuffer:
        type: string
    example: "{\n  \"result\":\"SUCCESS\",\n  \"errorId\":0,\n  \"errorMessage\":\"SUCCESS\",\n
      \ \"printBuffer\": \"\"\n}        "
  RefundConfirmationRequestIPOS:
    description: ""
    type: object
    properties:
      clientId:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      workflow:
        type: string
      transactionGuid:
        type: string
      refundGuid:
        type: string
      paymentStatus:
        type: string
      total:
        type: number
      reasonCode:
        type: number
      paymentDetails:
        type: array
        items:
          type: object
          properties:
            externalId:
              type: string
            additionalInfoValue:
              type: string
            amount:
              type: number
            verifications:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  value:
                    type: string
    example: |-
      {
        "clientId":"storeapp_v2",
        "clientName":"StoreApp_WS",
        "languageCulture":"de-DE",
        "consumer":"ABCD",
        "contract":"12345",
        "storeId":"345",
        "transactionGuid":"3BBD4488-67B5-4246-87A5-284AB472DA8B",
        "refundGuid":"90F898AC-0AFA-446E-8F1E-F6E0048D114A"
        "paymentStatus": "REFUNDED",
        "total": -13.66,
        "reasonCode": 1,
        "paymentDetails": [{
            "externalId":"EFTONLINE",
            "additionalInfoValue":"",
            "amount": -3.66,
            "verifications": [{
                "name":"ExternalOrderId",
                "value": "HJdf64dHD634nf47"
            },{
                "name":"PaymentToken",
                "value": "djk45789BDF7834rg"
            }]
        },{
            "externalId":"CHARGE3",
            "additionalInfoValue":"",
            "amount": -10,
            "verifications": [{
                "name":"ExternalOrderId",
                "value": "HJdf64dHD634nf47"
            },{
                "name":"CouponReference",
                "value": "dfuke45bcuie4r6"
            }]
        }]
      }
  ItemRefundCompletionResponseIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
      errorMessage:
        type: string
      total:
        type: number
      availablePaymentTenders:
        type: array
        items:
          properties:
            externalId:
              type: string
            description:
              type: string
          type: object
      availableReasonCodes:
        type: array
        items:
          properties:
            reasonCode:
              type: number
            reasonMessage:
              type: string
          type: object
      externalItemRefundAllowed:
        type: boolean
      externalItemRefundNotAllowedReasons:
        type: array
        items:
          properties:
            reasonId:
              type: number
            reasonMessage:
              type: string
          type: object
    example: "{\n  \"result\":\"SUCCESS\",\n  \"errorId\":0,\n  \"errorMessage\":\"SUCCESS\",\n
      \ \"refundGuid\":\"90F898AC-0AFA-446E-8F1E-F6E0048D114A\",\n  \"currencyCode\":\"EUR\",\n
      \ \"total\":-13.66,\n  \"availablePaymentTenders\":[\n      {\n          \"externalId\":
      \"CHARGE3\",\n          \"description\": \"Charge3 description\"\n      },\n
      \     {\n          \"externalId\": \"CHARGE4\",\n          \"description\":
      \"Charge4 description\"\n      }],\n  \"externalItemRefundAllowed\":\"true\",\n
      \ \"availableReasonCodes\":[\n      {\n          \"reasonCode\": 1,\n          \"reasonMessage\":
      \"Customer changed mind\"\n      },\n      {\n          \"reasonCode\": 2,\n
      \         \"reasonMessage\": \"Dish is cold\"\n      }],\n  \"externalItemRefundNotAllowedReasons\":
      []\n}    "
  ItemRefundCompletionRequestIPOS:
    description: ""
    type: object
    properties:
      clientId:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      workflow:
        type: string
      transactionGuid:
        type: string
      refundGuid:
        type: string
    example: |-
      {
        "clientId":"storeapp_v2",
        "clientName":"StoreApp_WS",
        "languageCulture":"de-DE",
        "consumer":"ABCD",
        "contract":"12345",
        "storeId":"345",
        "transactionGuid":"3BBD4488-67B5-4246-87A5-284AB472DA8B",
        "refundGuid":"90F898AC-0AFA-446E-8F1E-F6E0048D114A"
      }
  ItemRefundResponseIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
      errorMessage:
        type: string
      refundGuid:
        type: string
      currencyCode:
        type: string
      total:
        type: number
      refundItemDetails:
        type: array
        items:
          properties:
            barcode:
              type: string
            quantity:
              type: number
            total:
              type: number
            id:
              type: number
            parentId:
              type: number
          type: object
      skippedBarcodes:
        type: array
        items:
          properties:
            barcode:
              type: string
            reasonId:
              type: number
            reasonMessage:
              type: string
          type: object
      externalItemRefundAllowed:
        type: boolean
      externalItemRefundNotAllowedReasons:
        type: array
        items:
          properties:
            reasonId:
              type: number
            reasonMessage:
              type: string
          type: object
    example: "{\n  \"result\":\"SUCCESS\",\n  \"errorId\":0,\n  \"errorMessage\":\"SUCCESS\",\n
      \ \"refundGuid\":\"90F898AC-0AFA-446E-8F1E-F6E0048D114A\",\n  \"currencyCode\":\"EUR\",\n
      \ \"total\":-13.66,\n  \"refundItemDetails\":[\n      {\n          \"barcode\":
      \"30129959\",\n          \"quantity\": -1,\n          \"total\": -13.66,\n          \"ID\":
      3,\n          \"parentId\": 0\n      }],\n  \"skippedBarcodes\":[],\n  \"externalItemRefundAllowed\":\"true\",\n
      \ \"externalItemRefundNotAllowedReasons\":[]\n}    "
  UpdateItemRefundRequestIPOS:
    description: ""
    type: object
    properties:
      clientId:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      workflow:
        type: string
      transactionGuid:
        type: string
      refundGuid:
        type: string
      itemBarcodes:
        type: array
        items:
          properties:
            barcode:
              type: string
            id:
              type: number
            quantity:
              type: number
          type: object
    example: |-
      {
        "clientId":"storeapp_v2",
        "clientName":"StoreApp_WS",
        "languageCulture":"de-DE",
        "consumer":"ABCD",
        "contract":"12345",
        "storeId":"345",
        "transactionGuid":"3BBD4488-67B5-4246-87A5-284AB472DA8B",
        "refundGuid":"90F898AC-0AFA-446E-8F1E-F6E0048D114A"
        "barcodes": [{"barcode": "30129959","ID":3,"quantity": -1},{"barcode": "17228340","ID":5,"quantity": -1}]
      }
  CreateItemRefundRequestIPOS:
    description: ""
    type: object
    properties:
      clientId:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      workflow:
        type: string
      transactionGuid:
        type: string
      itemBarcodes:
        type: array
        items:
          properties:
            barcode:
              type: string
            id:
              type: number
            quantity:
              type: number
          type: object
    example: |-
      {
        "clientId":"storeapp_v2",
        "clientName":"StoreApp_WS",
        "languageCulture":"de-DE",
        "consumer":"ABCD",
        "contract":"12345",
        "storeId":"345",
        "transactionGuid":"3BBD4488-67B5-4246-87A5-284AB472DA8B",
        "barcodes": [{"barcode": "30129959","ID":3,"quantity": -1}]
      }
  OrderStatusResponse:
    description: The order status response.
    allOf:
    - $ref: '#/definitions/ResponseSuccess'
    - properties:
        orderStatus:
          type: string
          enum:
          - SALES_PREPARED
          - WAITING_FOR_RECALL_AT_TILL
          - PROCESSING
          - PAID_AT_TILL
          - ABORTED_AT_TILL
          - EXTERNAL_PAYMENT_PENDING
          - PAID_EXTERNAL
          - EXTERNAL_ITEM_REFUND_PREPARED
          - ABORTED_EXTERNAL
          - EXTERNAL_RECEIPT_VOID_PENDING
          - RECEIPT_VOIDED_EXTERNAL
          - EXTERNAL_ITEM_REFUND_PENDING
          - ITEMS_REFUNDED_EXTERNAL
          description: The status of the order and the allowed function:<br> SALES_PREPARED
            - POST /order-completions, PUT /orders, DELETE /orders.<br> WAITING_FOR_RECALL_AT_TILL
            - DELETE /orders.<br> PROCESSING - N/A.<br> PAID_AT_TILL - N/A.<br> ABORTED_AT_TILL
            - N/A.<br> EXTERNAL_PAYMENT_PENDING - POST /payment-confirmations.<br>
            PAID_EXTERNAL - POST /receipt-voids, POST /item-refunds.<br> EXTERNAL_ITEM_REFUND_PREPARED
            - POST /item-refunds, PUT /item-refunds, POST /item-refund-completions.<br>
            ABORTED_EXTERNAL - N/A.<br> EXTERNAL_RECEIPT_VOID_PENDING - POST /receipt-void-confirmations.<br>
            RECEIPT_VOIDED_EXTERNAL - N/A.<br> EXTERNAL_ITEM_REFUND_PENDING - POST
            /refund-confirmations.<br> ITEMS_REFUNDED_EXTERNAL - POST /item-refunds.
        kdsOrderId:
          type: string
          description: The (optional) orderId of the DN kitchen display solution(KDS).
            Will only be returned in case the DN KDS is used.
        issuedCoupons:
          type: array
          items:
            $ref: '#/definitions/Coupon'
          description: Coupons granted by this transaction
        printBuffers:
          description: The list of all available printBuffers for the order. This
            may include print buffers of the related sales, receipt void and item
            refund iPOS transactions.
          type: array
          items:
            properties:
              printBuffer:
                description: The base64-encoded print buffer of the receipt.
                type: string
                format: byte
            required:
            - printBuffer
      required:
      - orderStatus
      - printBuffers
  OrderStatusRequest:
    description: The order status request.
    allOf:
    - $ref: '#/definitions/AbstractRequest'
    - $ref: '#/definitions/OrderId'
  PaymentConfirmResponse:
    allOf:
    - $ref: '#/definitions/ReceiptResponse'
    - properties:
        kdsOrderId:
          type: string
          description: The (optional) orderId of the DN kitchen display solution(KDS).
            Will only be returned in case the DN KDS is used.
        issuedCoupons:
          type: array
          items:
            $ref: '#/definitions/Coupon'
          description: Coupons granted by this transaction
  ResponseBadRequestConfirmRefund:
    allOf:
    - $ref: '#/definitions/AbstractErrorResponse'
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
          enum:
          - 400
        errorId:
          enum:
          - 2
          - 10
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 22
        errorMessage:
          description: The error message.<br> 2 - Any required input is missing in
            the request.<br> 10 - The format of any input value is invalid.<br> 13
            - The specified basket GUID is unknown.<br> 14 - The totals and sum of
            used payment tender amounts are inconsistent.<br> 15 - Any of the specified
            payment tenders isn’t supported.<br> 16 - Payment tender verification
            failed.<br> 17 - The specified reasonCode isn’t valid.<br> 18 - The specified
            paymentStatus isn’t valid.<br> 22 - The specified refund GUID isn't valid
            (anymore) for the specified transaction GUID.
  ResponseBadRequestCheckHealth:
    allOf:
    - $ref: '#/definitions/AbstractErrorResponse'
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
          enum:
          - 400
        errorId:
          enum:
          - 2
          - 10
          - 19
          - 20
          - 21
        errorMessage:
          description: The error message.<br> 2 - Any required input is missing in
            the request.<br> 10 - The format of any input value is invalid.<br> 19
            - TPCentralDB is not available.<br> 20 - TPPosDB is not available.<br>
            21 - Due to technical issues the WebService is currently not available.
  ResponseBadRequestOrderStatus:
    allOf:
    - $ref: '#/definitions/AbstractErrorResponse'
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
          enum:
          - 400
        errorId:
          enum:
          - 2
          - 10
          - 13
        errorMessage:
          description: The error message.<br> 2 - Any required input is missing in
            the request.<br> 10 - The format of any input value is invalid.<br> 13
            - The specified basket GUID is unknown.
  RefundConfirmationResponse:
    description: The refund confirmation response.
    allOf:
    - $ref: '#/definitions/ResponseSuccess'
    - properties:
        printBuffer:
          description: The base64-encoded print buffer of the receipt. If the payment
            status of called function does not indicate successful operation, the
            print buffer contains an empty string.
          type: string
          format: byte
      required:
      - printBuffer
  RefundConfirmationRequest:
    description: The refund confirmation request.
    allOf:
    - $ref: '#/definitions/AbstractRequest'
    - $ref: '#/definitions/OrderId'
    - $ref: '#/definitions/RefundId'
    - properties:
        paymentStatus:
          description: The final status of the external item refund. Only in case
            of 'REFUNDED' the item refund is treated as successful and will be booked.
          type: string
          enum:
          - CANCELLED_BY_USER
          - TECHNICAL_ERROR
          - PAID
          - REFUNDED
        total:
          description: The total amount that has been refunded for the item refund.
            Will be used for consistency checks. Negative value.
          type: number
          format: decimal
        paymentDetails:
          description: The list of payment details. Has to contain used tenders only.
            Has to be empty if payment status is not 'REFUNDED'.
          type: array
          items:
            $ref: '#/definitions/PaymentDetail'
        reasonCode:
          description: The reasonCode for the item refund that the caller has selected.
            If the payment status is not 'REFUNDED', a '0' needs to be sent.
          type: integer
          format: int32
      required:
      - paymentStatus
      - total
      - paymentDetails
      - reasonCode
  ResponseBadRequestCompleteRefundItem:
    allOf:
    - $ref: '#/definitions/AbstractErrorResponse'
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
          enum:
          - 400
        errorId:
          enum:
          - 2
          - 10
          - 13
          - 22
          - 1003
        errorMessage:
          description: The error message.<br>2 - Any required input is missing in
            the request.<br>10 - The format of any input value is invalid.<br>13 -
            The specified basket GUID is unknown.<br>22 - The specified refund GUID
            isn't valid (anymore) for the specified transaction GUID. <br>1003 - An
            item refund is not allowed for this basket.
        externalItemRefundNotAllowedReasons:
          description: The reasons for the case that an external item refund is initiated
            but not allowed. (Error ID 1003).
          type: array
          items:
            $ref: '#/definitions/ExternalItemRefundNotAllowedReason'
  ItemRefundCompletionReasonCode:
    description: The reason code for the refund of an item.
    type: object
    properties:
      reasonCode:
        description: The code of the reason.
        type: integer
        format: int32
      reasonMessage:
        description: The translated message of the reason.
        type: string
    required:
    - reasonCode
    - reasonMessage
  ItemRefundCompletionResponse:
    description: The item refund response.
    allOf:
    - $ref: '#/definitions/ResponseSuccess'
    - properties:
        total:
          description: Total to refund. Negative value.
          type: number
          format: decimal
        availablePaymentTenders:
          description: The list of allowed payment tenders for the refund payment.
          type: array
          items:
            $ref: '#/definitions/PaymentTender'
        availableReasonCodes:
          description: The list of available reason codes(s) for the item refund.
          type: array
          items:
            $ref: '#/definitions/ItemRefundCompletionReasonCode'
    required:
    - total
    - availablePaymentTenders
    - availableReasonCodes
  ItemRefundCompletionRequest:
    description: The item refund completion request.
    allOf:
    - $ref: '#/definitions/AbstractRequest'
    - $ref: '#/definitions/OrderId'
    - $ref: '#/definitions/RefundId'
  ExternalItemRefundNotAllowedReason:
    description: The reason for not allowed external item refund.
    type: object
    properties:
      reasonId:
        description: The ID of the reason.
        type: integer
        format: int32
        enum:
        - 1
        - 2
        - 3
      reasonMessage:
        description: The message of the reason. The listed values represent the untranslated
          fallback message in country-unspecific english (en-LD), if the translation
          is not possible.<br> 1 - The basket has been paid at a till. Refunding items
          is only possible at a till.<br> 2 - The basket has already been voided.<br>
          3 - Any item(s) of the basket couldn't be processed.
        type: string
    required:
    - reasonId
    - reasonMessage
  ResponseBadRequestRefundItem:
    allOf:
    - $ref: '#/definitions/AbstractErrorResponse'
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
          enum:
          - 400
        errorId:
          enum:
          - 2
          - 10
          - 8
          - 13
          - 1003
        errorMessage:
          description: The error message.<br> 2 - Any required input is missing in
            the request.<br> 10 - The format of any input value is invalid.<br> 8
            - The specified barcodes list is empty.<br> 13 - The specified basket
            GUID is unknown.<br>1003 - An item refund is not allowed for this basket.
        externalItemRefundNotAllowedReasons:
          description: The reasons for the case that an external item refund is initiated
            but not allowed. (Error ID 1003).
          type: array
          items:
            $ref: '#/definitions/ExternalItemRefundNotAllowedReason'
  RefundItem:
    description: The refund item
    type: object
    properties:
      barcode:
        description: The barcode.
        type: string
      total:
        description: The total. Negative value.
        type: number
        format: decimal
      quantity:
        description: The quantity. Negative value.
        type: number
        format: decimal
      id:
        description: The order-internal ID of the item. Gaps are possible.
        type: integer
        format: int32
      parentId:
        description: The order-internal ID of the parent item, linking this item as
          child. O is for non-linked item.
        type: integer
        format: int32
    required:
    - barcode
    - total
    - quantity
    - id
    - parentId
  Coupon:
    description: A coupon
    type: object
    properties:
      barcode:
        description: The barcode.
        type: string
      message:
        description: The message attached to the coupon.
        type: string
    required:
    - barcode
    - message
  RefundId:
    description: The ID of the refund.
    type: object
    properties:
      refundId:
        description: The ID of the refund. Assigned and used by this API to identify
          this refund basket.
        type: string
        format: uuid
    required:
    - refundId
  ItemRefund:
    description: The refund item.
    allOf:
    - $ref: '#/definitions/RefundId'
    - properties:
        currencyCode:
          description: The currency code.
          type: string
          pattern: ^[A-Z]{3}$
          minLength: 3
          maxLength: 3
        refundItems:
          description: The refund items
          type: array
          items:
            $ref: '#/definitions/RefundItem'
        total:
          description: The total to refund. Negative value.
          type: number
          format: decimal
        skippedBarcodes:
          description: The skipped barcodes in the order.
          type: array
          items:
            $ref: '#/definitions/BarcodeItemSkipped'
        externalItemRefundAllowed:
          description: Indicates whether the refund is allowed for the provided refund
            basket.
          type: boolean
        externalItemRefundNotAllowedReasons:
          description: The reasons for the case that the refund is not allowed.
          type: array
          items:
            $ref: '#/definitions/ExternalItemRefundNotAllowedReason'
      required:
      - currencyCode
      - refundItems
      - total
      - skippedBarcodes
      - externalItemRefundAllowed
      - externalItemRefundNotAllowedReasons
  ItemRefundResponse:
    description: The item refund response.
    allOf:
    - $ref: '#/definitions/ResponseSuccess'
    - $ref: '#/definitions/ItemRefund'
  CreateItemRefundRequest:
    description: The item refund request.
    allOf:
    - $ref: '#/definitions/AbstractRequest'
    - $ref: '#/definitions/OrderId'
    - $ref: '#/definitions/ItemBarcodes'
  UpdateItemRefundRequest:
    description: The item refund request.
    allOf:
    - $ref: '#/definitions/AbstractRequest'
    - $ref: '#/definitions/OrderId'
    - $ref: '#/definitions/RefundId'
    - $ref: '#/definitions/ItemBarcodes'
  ItemBarcodes:
    description: The list of objects of the barcodes/quantities to refund.
    type: object
    properties:
      itemBarcodes:
        description: The barcodes.
        type: array
        items:
          $ref: '#/definitions/ItemBarcode'
    required:
    - itemBarcodes
  ItemBarcode:
    description: Only item barcodes are allowed
    type: object
    properties:
      barcode:
        description: The barcode.
        type: string
      id:
        description: The (line) ID of the corresponding "items" entry in the POST/PUT
          /orders response.
        type: integer
        format: int32
      quantity:
        description: The barcode quantity. Negative value.
        type: number
        format: decimal
    required:
    - barcode
    - id
    - quantity
  BarcodeItem:
    type: object
    required:
    - barcode
    - quantity
    properties:
      barcode:
        type: string
        description: The barcode.
      quantity:
        type: number
        format: decimal
        description: The barcode quantity.
    description: An element of the barcodes in the basket.
  BarcodeItemSkipped:
    type: object
    required:
    - barcode
    - reasonId
    - reasonMessage
    properties:
      barcode:
        type: string
        description: The barcode.
      reasonId:
        type: integer
        format: int32
        description: The ID of the reason.
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
      reasonMessage:
        type: string
        description: The message of the reason. The listed values represent the untranslated
          fallback message in country-unspecific english (en-LD), if the translation
          is not possible.<br> 1 - This item cannot be processed in the App.<br> 2
          - This barcode (type) cannot be used in the App during an item refund.<br>
          3 - This item couldn't be processed as a measurement input is required.<br>
          4 - This item is not allowed to be sold.<br> 5 - Item not found.<br> 6 -
          Invalid barcode.<br> 7 - A quantity input is not allowed for this item.<br>
          8 - The specified quantity exceeds the allowed quantity for this item.<br>
          9 - This item is not allowed to be refunded.<br> 10 - The specified quantity
          exceeds the (still) refundable quantity for this item.
    description: An element of the skipped barcodes in the order.
  Basket:
    type: object
    required:
    - barcodes
    - salesArea
    - salesCondition
    properties:
      externalOrderId:
        type: string
        description: The ID of the order, assigned and used by caller, used by this
          API for tracking only.
        maxLength: 50
      salesArea:
        type: string
        description: The area where the basket is sold, mapped to a workstation group,
          configured in iPOS.
        enum:
        - BISTRO
        - CAFEBAR
        - COWORKREST
        - REGULAR
        - RESTAURANT
        - SFMARKET
      salesCondition:
        type: string
        description: The sales condition.
        enum:
        - TAKEAWAY
        - EATIN
      barcodes:
        type: array
        description: The barcodes.
        items:
          type: object
          required:
          - barcode
          - quantity
          properties:
            barcode:
              type: string
              description: The barcode.
            quantity:
              type: number
              format: decimal
              description: The barcode quantity.
          description: An element of the barcodes in the basket.
    description: The basket with barcodes.
  BasketReplacement:
    allOf:
    - type: object
      required:
      - orderId
      properties:
        orderId:
          type: string
          format: uuid
          description: The ID of the order, assigned and used by this API.
      description: The ID of the order.
    - type: object
      required:
      - barcodes
      - salesArea
      - salesCondition
      properties:
        externalOrderId:
          type: string
          description: The ID of the order, assigned and used by caller, used by this
            API for tracking only.
          maxLength: 50
        salesArea:
          type: string
          description: The area where the basket is sold, mapped to a workstation
            group, configured in iPOS.
          enum:
          - BISTRO
          - CAFEBAR
          - COWORKREST
          - REGULAR
          - RESTAURANT
          - SFMARKET
        salesCondition:
          type: string
          description: The sales condition.
          enum:
          - TAKEAWAY
          - EATIN
        barcodes:
          type: array
          description: The barcodes.
          items:
            type: object
            required:
            - barcode
            - quantity
            properties:
              barcode:
                type: string
                description: The barcode.
              quantity:
                type: number
                format: decimal
                description: The barcode quantity.
            description: An element of the barcodes in the basket.
      description: The basket with barcodes.
    description: The basket to replace with barcodes.
  ExternalPaymentNotAllowedReason:
    type: object
    required:
    - reasonId
    - reasonMessage
    properties:
      reasonId:
        type: integer
        format: int32
        description: The ID of the reason.
        enum:
        - 1
        - 2
      reasonMessage:
        type: string
        description: The message of the reason. The listed values represent the untranslated
          fallback message in country-unspecific english (en-LD), if the translation
          is not possible.<br>1 - Any barcode(s) of this basket could not be processed.<br>2
          - Any indirect discount applies to this basket.
    description: The reason for not allowed external payment.
  ExternalVoidReceiptNotAllowedReason:
    type: object
    required:
    - reasonId
    - reasonMessage
    properties:
      reasonId:
        type: integer
        format: int32
        description: The ID of the reason.
        enum:
        - 1
        - 2
        - 3
      reasonMessage:
        type: string
        description: The message of the reason. The listed values represent the untranslated
          fallback message in country-unspecific english (en-LD), if the translation
          is not possible.<br>1 - The basket has been paid at a till. Voiding the
          receipt is only possible at a till.<br>2 - The basket has already been voided.<br>3
          - The basket cannot be voided as it contains items that are not allowed
          to be voided.
    description: The reason for not allowed external void of the receipt.
  OrderId:
    type: object
    required:
    - orderId
    properties:
      orderId:
        type: string
        format: uuid
        description: The ID of the order, assigned and used by this API.
    description: The ID of the order.
  OrderItem:
    type: object
    required:
    - barcode
    - description
    - discount
    - discountList
    - id
    - parentId
    - quantity
    - total
    - totalBeforeDiscount
    - unitOfMeasureName
    - usedUnitPrice
    properties:
      barcode:
        type: string
        description: The barcode.
      quantity:
        type: number
        format: decimal
        description: The item quantity.
      description:
        type: string
        description: The item description used on the receipt.
        maxLength: 20
      total:
        type: number
        format: decimal
        description: The total item price including subtracted discounts.
      id:
        type: integer
        format: int32
        description: The order-internal ID of the item. Gaps are possible.
      parentId:
        type: integer
        format: int32
        description: The order-internal ID of the parent item, linking this item as
          child. O is for non-linked item.
      usedUnitPrice:
        type: number
        format: decimal
        description: The used unit item price dependent on the price calculation rules
          like Regular TakeAway Price, Regular EatIn Price, Family TakeAway Price,
          Family EatIn Price, Coworker TakeAway Price,….
      unitOfMeasureName:
        type: string
        description: The display name of the measurement unit of the item.
      totalBeforeDiscount:
        type: number
        format: decimal
        description: The total item price without applied discounts.
      discount:
        type: number
        format: decimal
        description: The sum of all discounts applied to the item, including total
          discount parts. Negative value.
        maximum: 0
      discountList:
        type: array
        description: The list of all discounts applied to the item, including total
          discount parts.
        items:
          type: object
          required:
          - amount
          - description
          - isPartOfTotalDiscount
          properties:
            description:
              type: string
              description: The discount description.
            amount:
              type: number
              format: decimal
              description: The discount amount. Negative value.
              maximum: 0
            isPartOfTotalDiscount:
              type: boolean
              description: Indicates, if the discount detail is a part of one of the
                total discounts of the whole order, splitted on the order items.
          description: The detail of a discount element in item detail discount list.
    description: An item of the Order.
  OrderItemDiscountListDetail:
    type: object
    required:
    - amount
    - description
    - isPartOfTotalDiscount
    properties:
      description:
        type: string
        description: The discount description.
      amount:
        type: number
        format: decimal
        description: The discount amount. Negative value.
        maximum: 0
      isPartOfTotalDiscount:
        type: boolean
        description: Indicates, if the discount detail is a part of one of the total
          discounts of the whole order, splitted on the order items.
    description: The detail of a discount element in item detail discount list.
  Order:
    allOf:
    - type: object
      required:
      - orderId
      properties:
        orderId:
          type: string
          format: uuid
          description: The ID of the order, assigned and used by this API.
      description: The ID of the order.
    - required:
      - currencyCode
      - discount
      - externalPaymentAllowed
      - externalPaymentNotAllowedReasons
      - familyPriceSavings
      - items
      - skippedBarcodes
      - total
      - totalDiscountDetails
      properties:
        currencyCode:
          type: string
          description: The currency code.
          minLength: 3
          maxLength: 3
          pattern: ^[A-Z]{3}$
        total:
          type: number
          format: decimal
          description: The price finally to pay for the whole order.
        discount:
          type: number
          format: decimal
          description: The total of all discounts in the order. Negative value.
          maximum: 0
        totalDiscountDetails:
          type: array
          description: All total discounts applied to the order.
          items:
            type: object
            required:
            - amount
            - description
            properties:
              description:
                type: string
                description: The discount description.
              amount:
                type: number
                format: decimal
                description: The discount amount. Negative value.
                maximum: 0
            description: The detail of a discount element in total discount list.
        familyPriceSavings:
          type: number
          format: decimal
          description: The total of all family price savings in the order. Positive
            value.<br>Family price savings are not treated as discounts.
          minimum: 0
        items:
          type: array
          description: The items of the order.
          items:
            type: object
            required:
            - barcode
            - description
            - discount
            - discountList
            - id
            - parentId
            - quantity
            - total
            - totalBeforeDiscount
            - unitOfMeasureName
            - usedUnitPrice
            properties:
              barcode:
                type: string
                description: The barcode.
              quantity:
                type: number
                format: decimal
                description: The item quantity.
              description:
                type: string
                description: The item description used on the receipt.
                maxLength: 20
              total:
                type: number
                format: decimal
                description: The total item price including subtracted discounts.
              id:
                type: integer
                format: int32
                description: The order-internal ID of the item. Gaps are possible.
              parentId:
                type: integer
                format: int32
                description: The order-internal ID of the parent item, linking this
                  item as child. O is for non-linked item.
              usedUnitPrice:
                type: number
                format: decimal
                description: The used unit item price dependent on the price calculation
                  rules like Regular TakeAway Price, Regular EatIn Price, Family TakeAway
                  Price, Family EatIn Price, Coworker TakeAway Price,….
              unitOfMeasureName:
                type: string
                description: The display name of the measurement unit of the item.
              totalBeforeDiscount:
                type: number
                format: decimal
                description: The total item price without applied discounts.
              discount:
                type: number
                format: decimal
                description: The sum of all discounts applied to the item, including
                  total discount parts. Negative value.
                maximum: 0
              discountList:
                type: array
                description: The list of all discounts applied to the item, including
                  total discount parts.
                items:
                  type: object
                  required:
                  - amount
                  - description
                  - isPartOfTotalDiscount
                  properties:
                    description:
                      type: string
                      description: The discount description.
                    amount:
                      type: number
                      format: decimal
                      description: The discount amount. Negative value.
                      maximum: 0
                    isPartOfTotalDiscount:
                      type: boolean
                      description: Indicates, if the discount detail is a part of
                        one of the total discounts of the whole order, splitted on
                        the order items.
                  description: The detail of a discount element in item detail discount
                    list.
            description: An item of the Order.
        skippedBarcodes:
          type: array
          description: The skipped barcodes in the order.
          items:
            type: object
            required:
            - barcode
            - reasonId
            - reasonMessage
            properties:
              barcode:
                type: string
                description: The barcode.
              reasonId:
                type: integer
                format: int32
                description: The ID of the reason.
                enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
                - 8
                - 9
              reasonMessage:
                type: string
                description: The message of the reason. The listed values represent
                  the untranslated fallback message in country-unspecific english
                  (en-LD), if the translation is not possible.<br>1 - This item cannot
                  be processed in the App.<br>2 - This barcode (type) cannot be used
                  in the App.<br>3 - This item couldn't be processed as a measurement
                  input is required.<br>4 - This item is not allowed to be sold.<br>5
                  - This bargain item is already sold.<br>6 - Item not found.<br>7
                  - Invalid barcode.<br>8 - A quantity input is not allowed for this
                  item.<br>9 - The specified quantity exceeds the allowed quantity
                  for this item.
            description: An element of the skipped barcodes in the order.
        externalPaymentAllowed:
          type: boolean
          description: Indicates, if an external payment is allowed.
        externalPaymentNotAllowedReasons:
          type: array
          description: The reasons for the case that an external payment is not allowed.
          items:
            type: object
            required:
            - reasonId
            - reasonMessage
            properties:
              reasonId:
                type: integer
                format: int32
                description: The ID of the reason.
                enum:
                - 1
                - 2
              reasonMessage:
                type: string
                description: The message of the reason. The listed values represent
                  the untranslated fallback message in country-unspecific english
                  (en-LD), if the translation is not possible.<br>1 - Any barcode(s)
                  of this basket could not be processed.<br>2 - Any indirect discount
                  applies to this basket.
            description: The reason for not allowed external payment.
    description: The order.
  OrderCompletion:
    allOf:
    - type: object
      required:
      - orderId
      - paymentLocation
      properties:
        orderId:
          type: string
          format: uuid
          description: The ID of the order, assigned and used by this API.
        paymentLocation:
          type: string
          description: 'The payment location.<br>- ''till'': The basket will be stored
            for later checkout/payment at the till.<br>- ''external'': There will
            be performed an external payment.'
          enum:
          - external
          - till
        platform:
          type: string
          description: The platform performing the request.
        device:
          type: string
          description: The device performing the request.
        appOS:
          type: string
          description: The operating system performing the request.
        channel:
          type: string
          description: The channel the request gets performed in.
        journey:
          type: string
          description: The journey the request is requested in.
    description: The completion of the order.
  PaymentInstruction:
    type: object
    properties:
      total:
        type: number
        format: decimal
        description: The price of the order, the customer has to pay.<br>- Filled
          only, if payment location is 'external'.
      availablePaymentTenders:
        type: array
        description: The list of allowed payment tenders.<br>- Filled only, if payment
          location is 'external'.
        items:
          type: object
          required:
          - description
          - externalId
          properties:
            externalId:
              type: string
              description: The external ID of the tender.
            description:
              type: string
              description: The description of the tender.
          description: The payment tender
      basketBarcode:
        type: string
        description: The barcode for the later checkout of the basket at the till.<br>-
          Filled only, if payment location  is 'till'.
    description: The instruction for payment of the completed order.
  PaymentConfirmation:
    allOf:
    - type: object
      required:
      - orderId
      properties:
        orderId:
          type: string
          format: uuid
          description: The ID of the order, assigned and used by this API.
      description: The ID of the order.
    - required:
      - paymentDetails
      - paymentStatus
      - total
      properties:
        paymentStatus:
          type: string
          description: The final status of the payment. Only in case of 'PAID' the
            payment is treated as successful and will be booked.
          enum:
          - CANCELLED_BY_USER
          - TECHNICAL_ERROR
          - PAID
          - REFUNDED
        total:
          type: number
          format: decimal
          description: The price of the order, the customer has/had to pay finally.
            Will be used for consistency checks.
        paymentDetails:
          type: array
          description: The list of payment details. Has to contain used tenders only.
            Has to be empty if payment status is not 'PAID'.
          items:
            type: object
            required:
            - amount
            - externalId
            - verifications
            properties:
              externalId:
                type: string
                description: The external ID of the tender.
              additionalInfoValue:
                type: string
                description: The optional value of additional information. May be
                  used in case an additional information should be reported for the
                  actual payment. The value will be reported in PosLog.
                maxLength: 300
              amount:
                type: number
                format: decimal
                description: The paid amount using this tender.
              verifications:
                type: array
                description: The list of verification information for this tender.
                items:
                  type: object
                  required:
                  - name
                  - value
                  properties:
                    name:
                      type: string
                      description: The name of the verification information.
                    value:
                      type: string
                      description: The value of the verification information.
                  description: The payment tender verification information.
            description: The payment detail.
    description: The payment confirmation.
  PaymentDetail:
    type: object
    required:
    - amount
    - externalId
    - verifications
    properties:
      externalId:
        type: string
        description: The external ID of the tender.
      additionalInfoValue:
        type: string
        description: The optional value of additional information. May be used in
          case an additional information should be reported for the actual payment.
          The value will be reported in PosLog.
        maxLength: 300
      amount:
        type: number
        format: decimal
        description: The paid amount using this tender. The value needs to be specified
          positive in case the overall paymentStatus is 'PAID', and negative in the
          case the paymentStatus is 'REFUNDED'.
      verifications:
        type: array
        description: The list of verification information for this tender.
        items:
          type: object
          required:
          - name
          - value
          properties:
            name:
              type: string
              description: The name of the verification information.
            value:
              type: string
              description: The value of the verification information.
          description: The payment tender verification information.
    description: The payment detail.
  PaymentTender:
    type: object
    required:
    - description
    - externalId
    properties:
      externalId:
        type: string
        description: The external ID of the tender.
      description:
        type: string
        description: The description of the tender.
    description: The payment tender
  PaymentVerification:
    type: object
    required:
    - name
    - value
    properties:
      name:
        type: string
        description: The name of the verification information.
      value:
        type: string
        description: The value of the verification information.
    description: The payment tender verification information.
  VoidReceiptInstruction:
    type: object
    required:
    - availablePaymentTenders
    - availableReasonCodes
    - total
    properties:
      total:
        type: number
        format: decimal
        description: The total amount that needs to be booked back for the voided
          receipt. Negative value.
        maximum: 0
      availablePaymentTenders:
        type: array
        description: The list of allowed payment tenders.
        items:
          type: object
          required:
          - description
          - externalId
          properties:
            externalId:
              type: string
              description: The external ID of the tender.
            description:
              type: string
              description: The description of the tender.
          description: The payment tender
      availableReasonCodes:
        type: array
        description: The list of available reason codes(s) for the void of the receipt.
          The caller has to select the fitting one and has to use it in the void receipt
          confirmation.
        items:
          type: object
          required:
          - reasonCode
          - reasonMessage
          properties:
            reasonCode:
              type: integer
              format: int32
              description: The code of the reason.
            reasonMessage:
              type: string
              description: The translated message of the reason.
          description: The reason code for the void of a receipt.
    description: The instruction for the void of the receipt.
  VoidReceiptConfirmation:
    allOf:
    - type: object
      required:
      - orderId
      properties:
        orderId:
          type: string
          format: uuid
          description: The ID of the order, assigned and used by this API.
      description: The ID of the order.
    - allOf:
      - type: object
        required:
        - orderId
        properties:
          orderId:
            type: string
            format: uuid
            description: The ID of the order, assigned and used by this API.
        description: The ID of the order.
      - required:
        - paymentDetails
        - paymentStatus
        - total
        properties:
          paymentStatus:
            type: string
            description: The final status of the payment. Only in case of 'PAID' the
              payment is treated as successful and will be booked.
            enum:
            - CANCELLED_BY_USER
            - TECHNICAL_ERROR
            - PAID
            - REFUNDED
          total:
            type: number
            format: decimal
            description: The price of the order, the customer has/had to pay finally.
              Will be used for consistency checks.
          paymentDetails:
            type: array
            description: The list of payment details. Has to contain used tenders
              only. Has to be empty if payment status is not 'PAID'.
            items:
              type: object
              required:
              - amount
              - externalId
              - verifications
              properties:
                externalId:
                  type: string
                  description: The external ID of the tender.
                additionalInfoValue:
                  type: string
                  description: The optional value of additional information. May be
                    used in case an additional information should be reported for
                    the actual payment. The value will be reported in PosLog.
                  maxLength: 300
                amount:
                  type: number
                  format: decimal
                  description: The paid amount using this tender. Negative value.
                verifications:
                  type: array
                  description: The list of verification information for this tender.
                  items:
                    type: object
                    required:
                    - name
                    - value
                    properties:
                      name:
                        type: string
                        description: The name of the verification information.
                      value:
                        type: string
                        description: The value of the verification information.
                    description: The payment tender verification information.
              description: The payment detail.
      description: The payment confirmation.
    - required:
      - reasonCode
      properties:
        paymentStatus:
          description: The final status of the external receipt void. Only in case
            of 'REFUNDED' the receipt void is treated as successful and will be booked.
        total:
          description: The total amount that has been refunded for the receipt void.
            Will be used for consistency checks. Negative value.
        paymentDetails:
          description: The list of payment details. Has to contain used tenders only.
            Has to be empty if payment status is not 'REFUNDED'.
        reasonCode:
          type: integer
          format: int32
          description: The reasonCode for the receipt void that the caller has selected.
            If the payment status is not 'REFUNDED', a '0' needs to be sent.
    description: The void receipt confirmation.
  VoidReceiptReasonCode:
    type: object
    required:
    - reasonCode
    - reasonMessage
    properties:
      reasonCode:
        type: integer
        format: int32
        description: The code of the reason.
      reasonMessage:
        type: string
        description: The translated message of the reason.
    description: The reason code for the void of a receipt.
  Receipt:
    type: object
    required:
    - printBuffer
    properties:
      printBuffer:
        type: string
        format: byte
        description: The base64-encoded print buffer of the receipt. If the payment
          status of called function does not indicate successful operation, the print
          buffer contains an empty string.
        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
    description: The receipt.
  TotalDiscountListDetail:
    type: object
    required:
    - amount
    - description
    properties:
      description:
        type: string
        description: The discount description.
      amount:
        type: number
        format: decimal
        description: The discount amount. Negative value.
        maximum: 0
    description: The detail of a discount element in total discount list.
  AbstractRequest:
    type: object
    required:
    - appName
    - clientName
    properties:
      appName:
        type: string
        description: The name of the calling app.
      clientName:
        type: string
        description: The name of the calling client, mapped to a workstation, configured
          in iPOS.
    description: The abstract request type.
  BasketRequest:
    allOf:
    - type: object
      required:
      - appName
      - clientName
      properties:
        appName:
          type: string
          description: The name of the calling app.
        clientName:
          type: string
          description: The name of the calling client, mapped to a workstation, configured
            in iPOS.
      description: The abstract request type.
    - type: object
      required:
      - barcodes
      - salesArea
      - salesCondition
      properties:
        externalOrderId:
          type: string
          description: The ID of the order, assigned and used by caller, used by this
            API for tracking only.
          maxLength: 50
        salesArea:
          type: string
          description: The area where the basket is sold, mapped to a workstation
            group, configured in iPOS.
          enum:
          - BISTRO
          - CAFEBAR
          - COWORKREST
          - REGULAR
          - RESTAURANT
          - SFMARKET
        salesCondition:
          type: string
          description: The sales condition.
          enum:
          - TAKEAWAY
          - EATIN
        barcodes:
          type: array
          description: The barcodes.
          items:
            type: object
            required:
            - barcode
            - quantity
            properties:
              barcode:
                type: string
                description: The barcode.
              quantity:
                type: number
                format: decimal
                description: The barcode quantity.
            description: An element of the barcodes in the basket.
      description: The basket with barcodes.
    description: The basket request for order creation.
  BasketReplacementRequest:
    allOf:
    - type: object
      required:
      - appName
      - clientName
      properties:
        appName:
          type: string
          description: The name of the calling app.
        clientName:
          type: string
          description: The name of the calling client, mapped to a workstation, configured
            in iPOS.
      description: The abstract request type.
    - allOf:
      - type: object
        required:
        - orderId
        properties:
          orderId:
            type: string
            format: uuid
            description: The ID of the order, assigned and used by this API.
        description: The ID of the order.
      - type: object
        required:
        - barcodes
        - salesArea
        - salesCondition
        properties:
          externalOrderId:
            type: string
            description: The ID of the order, assigned and used by caller, used by
              this API for tracking only.
            maxLength: 50
          salesArea:
            type: string
            description: The area where the basket is sold, mapped to a workstation
              group, configured in iPOS.
            enum:
            - BISTRO
            - CAFEBAR
            - COWORKREST
            - REGULAR
            - RESTAURANT
            - SFMARKET
          salesCondition:
            type: string
            description: The sales condition.
            enum:
            - TAKEAWAY
            - EATIN
          barcodes:
            type: array
            description: The barcodes.
            items:
              type: object
              required:
              - barcode
              - quantity
              properties:
                barcode:
                  type: string
                  description: The barcode.
                quantity:
                  type: number
                  format: decimal
                  description: The barcode quantity.
              description: An element of the barcodes in the basket.
        description: The basket with barcodes.
      description: The basket to replace with barcodes.
    description: The basket request for order update (replacement).
  OrderIdRequest:
    allOf:
    - type: object
      required:
      - appName
      - clientName
      properties:
        appName:
          type: string
          description: The name of the calling app.
        clientName:
          type: string
          description: The name of the calling client, mapped to a workstation, configured
            in iPOS.
      description: The abstract request type.
    - type: object
      required:
      - orderId
      properties:
        orderId:
          type: string
          format: uuid
          description: The ID of the order, assigned and used by this API.
      description: The ID of the order.
    - type: object
      required:
      - barcodes
      - salesArea
      - salesCondition
      properties:
        externalOrderId:
          type: string
          description: The ID of the order, assigned and used by caller, used by this
            API for tracking only.
          maxLength: 50
        salesArea:
          type: string
          description: The area where the basket is sold, mapped to a workstation
            group, configured in iPOS.
          enum:
          - BISTRO
          - CAFEBAR
          - COWORKREST
          - REGULAR
          - RESTAURANT
          - SFMARKET
        salesCondition:
          type: string
          description: The sales condition.
          enum:
          - TAKEAWAY
          - EATIN
        barcodes:
          type: array
          description: The barcodes.
          items:
            type: object
            required:
            - barcode
            - quantity
            properties:
              barcode:
                type: string
                description: The barcode.
              quantity:
                type: number
                format: decimal
                description: The barcode quantity.
            description: An element of the barcodes in the basket.
      description: The basket with barcodes.
    description: The request with order ID only.
  OrderCompletionRequest:
    allOf:
    - type: object
      required:
      - appName
      - clientName
      properties:
        appName:
          type: string
          description: The name of the calling app.
        clientName:
          type: string
          description: The name of the calling client, mapped to a workstation, configured
            in iPOS.
      description: The abstract request type.
    - allOf:
      - type: object
        required:
        - orderId
        properties:
          orderId:
            type: string
            format: uuid
            description: The ID of the order, assigned and used by this API.
        description: The ID of the order.
      - required:
        - paymentLocation
        properties:
          paymentLocation:
            type: string
            description: 'The payment location.<br>- ''till'': The basket will be
              stored for later checkout/payment at the till.<br>- ''external'': There
              will be performed an external payment.'
            enum:
            - external
            - till
          platform:
            type: string
            description: The platform performing the request.
          device:
            type: string
            description: The device performing the request.
          appOS:
            type: string
            description: The operating system performing the request.
          channel:
            type: string
            description: The channel the request gets performed in.
          journey:
            type: string
            description: The journey the request is requested in.
          notifications:
            type: array
            items:
              type: object
              required:
              - type
              - dataVariant
              - data
              properties:
                type:
                  type: string
                dataVariant:
                  type: string
                data:
                  type: string
      description: The completion of the order.
    description: The order completion request.
  PaymentConfirmationRequest:
    allOf:
    - type: object
      required:
      - appName
      - clientName
      properties:
        appName:
          type: string
          description: The name of the calling app.
        clientName:
          type: string
          description: The name of the calling client, mapped to a workstation, configured
            in iPOS.
      description: The abstract request type.
    - allOf:
      - type: object
        required:
        - orderId
        properties:
          orderId:
            type: string
            format: uuid
            description: The ID of the order, assigned and used by this API.
        description: The ID of the order.
      - required:
        - paymentDetails
        - paymentStatus
        - total
        properties:
          paymentStatus:
            type: string
            description: The final status of the payment. Only in case of 'PAID' the
              payment is treated as successful and will be booked.
            enum:
            - CANCELLED_BY_USER
            - TECHNICAL_ERROR
            - PAID
            - REFUNDED
          total:
            type: number
            format: decimal
            description: The price of the order, the customer has/had to pay finally.
              Will be used for consistency checks.
          paymentDetails:
            type: array
            description: The list of payment details. Has to contain used tenders
              only. Has to be empty if payment status is not 'PAID'.
            items:
              type: object
              required:
              - amount
              - externalId
              - verifications
              properties:
                externalId:
                  type: string
                  description: The external ID of the tender.
                additionalInfoValue:
                  type: string
                  description: The optional value of additional information. May be
                    used in case an additional information should be reported for
                    the actual payment. The value will be reported in PosLog.
                  maxLength: 300
                amount:
                  type: number
                  format: decimal
                  description: The paid amount using this tender.
                verifications:
                  type: array
                  description: The list of verification information for this tender.
                  items:
                    type: object
                    required:
                    - name
                    - value
                    properties:
                      name:
                        type: string
                        description: The name of the verification information.
                      value:
                        type: string
                        description: The value of the verification information.
                    description: The payment tender verification information.
              description: The payment detail.
      description: The payment confirmation.
    description: The payment confirmation request.
  VoidReceiptConfirmationRequest:
    allOf:
    - type: object
      required:
      - appName
      - clientName
      properties:
        appName:
          type: string
          description: The name of the calling app.
        clientName:
          type: string
          description: The name of the calling client, mapped to a workstation, configured
            in iPOS.
      description: The abstract request type.
    - allOf:
      - type: object
        required:
        - orderId
        properties:
          orderId:
            type: string
            format: uuid
            description: The ID of the order, assigned and used by this API.
        description: The ID of the order.
      - allOf:
        - type: object
          required:
          - orderId
          properties:
            orderId:
              type: string
              format: uuid
              description: The ID of the order, assigned and used by this API.
          description: The ID of the order.
        - required:
          - paymentDetails
          - paymentStatus
          - total
          properties:
            paymentStatus:
              type: string
              description: The final status of the payment. Only in case of 'PAID'
                the payment is treated as successful and will be booked.
              enum:
              - CANCELLED_BY_USER
              - TECHNICAL_ERROR
              - PAID
              - REFUNDED
            total:
              type: number
              format: decimal
              description: The price of the order, the customer has/had to pay finally.
                Will be used for consistency checks.
            paymentDetails:
              type: array
              description: The list of payment details. Has to contain used tenders
                only. Has to be empty if payment status is not 'PAID'.
              items:
                type: object
                required:
                - amount
                - externalId
                - verifications
                properties:
                  externalId:
                    type: string
                    description: The external ID of the tender.
                  additionalInfoValue:
                    type: string
                    description: The optional value of additional information. May
                      be used in case an additional information should be reported
                      for the actual payment. The value will be reported in PosLog.
                    maxLength: 300
                  amount:
                    type: number
                    format: decimal
                    description: The paid amount using this tender. Negative value.
                  verifications:
                    type: array
                    description: The list of verification information for this tender.
                    items:
                      type: object
                      required:
                      - name
                      - value
                      properties:
                        name:
                          type: string
                          description: The name of the verification information.
                        value:
                          type: string
                          description: The value of the verification information.
                      description: The payment tender verification information.
                description: The payment detail.
        description: The payment confirmation.
      - required:
        - reasonCode
        properties:
          paymentStatus:
            description: The final status of the external receipt void. Only in case
              of 'REFUNDED' the receipt void is treated as successful and will be
              booked.
          total:
            description: The total amount that has been refunded for the receipt void.
              Will be used for consistency checks. Negative value.
          paymentDetails:
            description: The list of payment details. Has to contain used tenders
              only. Has to be empty if payment status is not 'REFUNDED'.
          reasonCode:
            type: integer
            format: int32
            description: The reasonCode for the receipt void that the caller has selected.
              If the payment status is not 'REFUNDED', a '0' needs to be sent.
      description: The void receipt confirmation.
    description: The void receipt confirmation request.
  OrderResponse:
    allOf:
    - type: object
      required:
      - code
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>200 - Success
          enum:
          - 200
      description: The SUCCESS response. Code equals HTML status code.<br>200 - Success
    - allOf:
      - type: object
        required:
        - orderId
        properties:
          orderId:
            type: string
            format: uuid
            description: The ID of the order, assigned and used by this API.
        description: The ID of the order.
      - required:
        - currencyCode
        - discount
        - externalPaymentAllowed
        - externalPaymentNotAllowedReasons
        - familyPriceSavings
        - items
        - skippedBarcodes
        - total
        - totalDiscountDetails
        properties:
          currencyCode:
            type: string
            description: The currency code.
            minLength: 3
            maxLength: 3
            pattern: ^[A-Z]{3}$
          total:
            type: number
            format: decimal
            description: The price finally to pay for the whole order.
          discount:
            type: number
            format: decimal
            description: The total of all discounts in the order. Negative value.
            maximum: 0
          totalDiscountDetails:
            type: array
            description: All total discounts applied to the order.
            items:
              type: object
              required:
              - amount
              - description
              properties:
                description:
                  type: string
                  description: The discount description.
                amount:
                  type: number
                  format: decimal
                  description: The discount amount. Negative value.
                  maximum: 0
              description: The detail of a discount element in total discount list.
          familyPriceSavings:
            type: number
            format: decimal
            description: The total of all family price savings in the order. Positive
              value.<br>Family price savings are not treated as discounts.
            minimum: 0
          items:
            type: array
            description: The items of the order.
            items:
              type: object
              required:
              - barcode
              - description
              - discount
              - discountList
              - id
              - parentId
              - quantity
              - total
              - totalBeforeDiscount
              - unitOfMeasureName
              - usedUnitPrice
              properties:
                barcode:
                  type: string
                  description: The barcode.
                quantity:
                  type: number
                  format: decimal
                  description: The item quantity.
                description:
                  type: string
                  description: The item description used on the receipt.
                  maxLength: 20
                total:
                  type: number
                  format: decimal
                  description: The total item price including subtracted discounts.
                id:
                  type: integer
                  format: int32
                  description: The order-internal ID of the item. Gaps are possible.
                parentId:
                  type: integer
                  format: int32
                  description: The order-internal ID of the parent item, linking this
                    item as child. O is for non-linked item.
                usedUnitPrice:
                  type: number
                  format: decimal
                  description: The used unit item price dependent on the price calculation
                    rules like Regular TakeAway Price, Regular EatIn Price, Family
                    TakeAway Price, Family EatIn Price, Coworker TakeAway Price,….
                unitOfMeasureName:
                  type: string
                  description: The display name of the measurement unit of the item.
                iSellOrderNumber:
                  type: string
                  description: The number of the iSell order this item belongs to.
                totalBeforeDiscount:
                  type: number
                  format: decimal
                  description: The total item price without applied discounts.
                discount:
                  type: number
                  format: decimal
                  description: The sum of all discounts applied to the item, including
                    total discount parts. Negative value.
                  maximum: 0
                discountList:
                  type: array
                  description: The list of all discounts applied to the item, including
                    total discount parts.
                  items:
                    type: object
                    required:
                    - amount
                    - description
                    - isPartOfTotalDiscount
                    properties:
                      description:
                        type: string
                        description: The discount description.
                      amount:
                        type: number
                        format: decimal
                        description: The discount amount. Negative value.
                        maximum: 0
                      isPartOfTotalDiscount:
                        type: boolean
                        description: Indicates, if the discount detail is a part of
                          one of the total discounts of the whole order, splitted
                          on the order items.
                    description: The detail of a discount element in item detail discount
                      list.
              description: An item of the Order.
          skippedBarcodes:
            type: array
            description: The skipped barcodes in the order.
            items:
              type: object
              required:
              - barcode
              - reasonId
              - reasonMessage
              properties:
                barcode:
                  type: string
                  description: The barcode.
                reasonId:
                  type: integer
                  format: int32
                  description: The ID of the reason.
                  enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  - 8
                  - 9
                  - 10
                  - 11
                  - 12
                  - 13
                reasonMessage:
                  type: string
                  description: The message of the reason. The listed values represent
                    the untranslated fallback message in country-unspecific english
                    (en-LD), if the translation is not possible.<br>1 - This item
                    cannot be processed in the App.<br>2 - This barcode (type) cannot
                    be used in the App.<br>3 - This item couldn't be processed as
                    a measurement input is required.<br>4 - This item is not allowed
                    to be sold.<br>5 - This bargain item is already sold.<br>6 - Item
                    not found.<br>7 - Invalid barcode.<br>8 - A quantity input is
                    not allowed for this item.<br>9 - The specified quantity exceeds
                    the allowed quantity for this item.<br>10 - Order already paid
                    <br>11 - Web Service Error<br>12 - The iSell order that was just
                    scanned already appears on the receipt.<br>13 - Article from iSell
                    order not found.
              description: An element of the skipped barcodes in the order.
          externalPaymentAllowed:
            type: boolean
            description: Indicates, if an external payment is allowed.
          externalPaymentNotAllowedReasons:
            type: array
            description: The reasons for the case that an external payment is not
              allowed.
            items:
              type: object
              required:
              - reasonId
              - reasonMessage
              properties:
                reasonId:
                  type: integer
                  format: int32
                  description: The ID of the reason.
                  enum:
                  - 1
                  - 2
                reasonMessage:
                  type: string
                  description: The message of the reason. The listed values represent
                    the untranslated fallback message in country-unspecific english
                    (en-LD), if the translation is not possible.<br>1 - Any barcode(s)
                    of this basket could not be processed.<br>2 - Any indirect discount
                    applies to this basket.
              description: The reason for not allowed external payment.
          iSellOrders:
            type: array
            description: iSell orders given in the transaction
            items:
              $ref: '#/definitions/iSellOrder'
      description: The order.
    description: The order response.
  iSellOrder:
    description: An iSell order.
    type: object
    required:
    - id
    - orderNumber
    - orderType
    properties:
      id:
        type: integer
        format: int32
        description: The order-internal ID of the iSell order. Gaps are possible.
      orderNumber:
        type: string
        description: The number of the iSell order.
      orderType:
        type: string
        description: The type of the iSell order.
  PaymentInstructionResponse:
    allOf:
    - type: object
      required:
      - code
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>200 - Success
          enum:
          - 200
      description: The SUCCESS response. Code equals HTML status code.<br>200 - Success
    - type: object
      properties:
        total:
          type: number
          format: decimal
          description: The price of the order, the customer has to pay.<br>- Filled
            only, if payment location is 'external'.
        availablePaymentTenders:
          type: array
          description: The list of allowed payment tenders.<br>- Filled only, if payment
            location is 'external'.
          items:
            type: object
            required:
            - description
            - externalId
            properties:
              externalId:
                type: string
                description: The external ID of the tender.
              description:
                type: string
                description: The description of the tender.
            description: The payment tender
        basketBarcode:
          type: string
          description: The barcode for the later checkout of the basket at the till.<br>-
            Filled only, if payment location  is 'till'.
      description: The instruction for payment of the completed order.
    description: The payment instruction response.
  VoidReceiptInstructionResponse:
    allOf:
    - type: object
      required:
      - code
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>200 - Success
          enum:
          - 200
      description: The SUCCESS response. Code equals HTML status code.<br>200 - Success
    - type: object
      required:
      - availablePaymentTenders
      - availableReasonCodes
      - total
      properties:
        total:
          type: number
          format: decimal
          description: The total amount that needs to be booked back for the voided
            receipt. Negative value.
          maximum: 0
        availablePaymentTenders:
          type: array
          description: The list of allowed payment tenders.
          items:
            type: object
            required:
            - description
            - externalId
            properties:
              externalId:
                type: string
                description: The external ID of the tender.
              description:
                type: string
                description: The description of the tender.
            description: The payment tender
        availableReasonCodes:
          type: array
          description: The list of available reason codes(s) for the void of the receipt.
            The caller has to select the fitting one and has to use it in the void
            receipt confirmation.
          items:
            type: object
            required:
            - reasonCode
            - reasonMessage
            properties:
              reasonCode:
                type: integer
                format: int32
                description: The code of the reason.
              reasonMessage:
                type: string
                description: The translated message of the reason.
            description: The reason code for the void of a receipt.
      description: The instruction for the void of the receipt.
    description: The void receipt instruction response.
  ReceiptResponse:
    allOf:
    - type: object
      required:
      - code
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>200 - Success
          enum:
          - 200
      description: The SUCCESS response. Code equals HTML status code.<br>200 - Success
    - type: object
      required:
      - printBuffer
      properties:
        printBuffer:
          type: string
          format: byte
          description: The base64-encoded print buffer of the receipt. If the payment
            status of called function does not indicate successful operation, the
            print buffer contains an empty string.
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
      description: The receipt.
    description: The receipt response.
  AbstractErrorResponse:
    type: object
    required:
    - code
    - errorId
    - errorMessage
    properties:
      code:
        type: integer
        format: int32
        description: The code. Equals HTML status code.<br>400 - Bad request<br>401
          - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
          - Server unavailable
        enum:
        - 400
        - 401
        - 404
        - 500
        - 503
      errorId:
        type: integer
        format: int32
        description: The error ID.
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 1001
        - 1002
        - 1003
      errorMessage:
        type: string
        description: The error message.<br>1 - An internal server error occurred.
          (500)<br>2 - Any required input is missing in the request. (400)<br>3 -
          The store ID doesn't match the local store. (500)<br>4 - The specified clientName
          isn't allowed to send requests. (401)<br>5 - The basket isn't available
          in the cache anymore. Re-send the basket via SendTransactionData. (500)<br>6
          - The Webservice is blocked via 'End of day' handling. (503)<br>7 - The
          referenced basket has a wrong status. (500)<br>8 - The specified barcodes
          list is empty. (400)<br>9 - Access denied. (401)<br>10 - The format of any
          input value is invalid. (400)<br>11 - The specified sales area is not supported.
          (400)<br>12 - The specified sales condition is not supported. (400)<br>13
          - The specified basket GUID is unknown. (400)<br>14 - The totals and sum
          of used payment tender amounts are inconsistent. (400)<br>15 - Any of the
          specified payment tenders is not supported. (400)<br>16 - Payment tender
          verification failed. (400)<br>17 - The specified reasonCode is not valid.
          (400)<br>18 - The specified paymentStatus is not valid. (400) <br>19 - TPCentralDB
          is not available. (400) <br>20 - TPPosDB is not available. (400) <br>21
          - Due to technical issues the WebService is currently not available. (400)
          <br>22 - The specified refund GUID isn't valid (anymore) for the specified
          transaction GUID. (400) <br>1001 - External payment is not allowed for this
          basket. (400)<br>1002 - An external void receipt isn’t allowed for this
          basket. (400) <br>1003 - An item refund is not allowed for this basket.
          (400)
    description: The response. Code equals HTML status code. Contains additional error
      ID and server logic dependent status/error messages.
  ResponseSuccess:
    type: object
    required:
    - code
    properties:
      code:
        type: integer
        format: int32
        description: The code. Equals HTML status code.<br>200 - Success
        enum:
        - 200
    description: The SUCCESS response. Code equals HTML status code.<br>200 - Success
  ResponseBadRequest:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
        errorId: []
        errorMessage:
          description: The error message.<br>2 - Any required input is missing in
            the request.<br>10 - The format of any input value is invalid.
  ResponseBadRequestCreateOrUpdateOrder:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
        errorId: []
        errorMessage:
          description: The error message.<br>2 - Any required input is missing in
            the request.<br>10 - The format of any input value is invalid.<br>8 -
            The specified barcodes list is empty.<br>11 - The specified sales area
            is not supported.<br>12 - The specified sales condition is not supported.
  ResponseBadRequestCompleteOrder:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
        errorId: []
        errorMessage:
          description: The error message.<br>2 - Any required input is missing in
            the request.<br>10 - The format of any input value is invalid.<br>1001
            - External payment is not allowed for this basket.
        externalPaymentNotAllowedReasons:
          type: array
          description: The reasons for the case that an external payment is initiated
            but not allowed (Error ID 1001).
          items:
            type: object
            required:
            - reasonId
            - reasonMessage
            properties:
              reasonId:
                type: integer
                format: int32
                description: The ID of the reason.
                enum:
                - 1
                - 2
              reasonMessage:
                type: string
                description: The message of the reason. The listed values represent
                  the untranslated fallback message in country-unspecific english
                  (en-LD), if the translation is not possible.<br>1 - Any barcode(s)
                  of this basket could not be processed.<br>2 - Any indirect discount
                  applies to this basket.
            description: The reason for not allowed external payment.
  ResponseBadRequestConfirmPayment:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
        errorId: []
        errorMessage:
          description: The error message.<br>2 - Any required input is missing in
            the request.<br>10 - The format of any input value is invalid.<br>13 -
            The specified basket GUID is unknown.<br>14 - The totals and sum of used
            payment tender amounts are inconsistent.<br>15 - Any of the specified
            payment tenders is not supported.<br>16 - Payment tender verification
            failed.<br>18 - The specified paymentStatus is not valid.
  ResponseBadRequestVoidReceipt:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
        errorId: []
        errorMessage:
          description: The error message.<br>2 - Any required input is missing in
            the request.<br>10 - The format of any input value is invalid.<br>13 -
            The specified basket GUID is unknown.<br>1002 - An external void receipt
            isn’t allowed for this basket.
        externalVoidReceiptNotAllowedReasons:
          type: array
          description: The reasons for the case that an external void is initiated
            but not allowed. (Error ID 1002).
          items:
            type: object
            required:
            - reasonId
            - reasonMessage
            properties:
              reasonId:
                type: integer
                format: int32
                description: The ID of the reason.
                enum:
                - 1
                - 2
                - 3
              reasonMessage:
                type: string
                description: The message of the reason. The listed values represent
                  the untranslated fallback message in country-unspecific english
                  (en-LD), if the translation is not possible.<br>1 - The basket has
                  been paid at a till. Voiding the receipt is only possible at a till.<br>2
                  - The basket has already been voided.<br>3 - The basket cannot be
                  voided as it contains items that are not allowed to be voided.
            description: The reason for not allowed external void of the receipt.
  ResponseBadRequestConfirmVoidReceipt:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>400 - Bad request
        errorId: []
        errorMessage:
          description: The error message.<br>2 - Any required input is missing in
            the request.<br>10 - The format of any input value is invalid.<br>13 -
            The specified basket GUID is unknown.<br>14 - The totals and sum of used
            payment tender amounts are inconsistent.<br>15 - Any of the specified
            payment tenders is not supported.<br>16 - Payment tender verification
            failed.<br>17 - The specified reasonCode is not valid.<br>18 - The specified
            paymentStatus is not valid.
  ResponseUnauthorized:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>401 - Unauthorized
        errorId: []
        errorMessage:
          description: The error message.<br>4 - The specified clientName isn't allowed
            to send requests.<br>9 - Access denied.
  ResponseNotFound:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>404 - Not found
        errorId: []
        errorMessage:
          description: The error message.
  ResponseInternalServerError:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>500 - Internal server
            error
        errorId: []
        errorMessage:
          description: The error message.<br>1 - An internal server error occurred.<br>3
            - The store ID doesn't match the local store.<br>7 - The referenced basket
            has a wrong status.
  ResponseInternalServerErrorCompleteOrder:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>500 - Internal server
            error
        errorId: []
        errorMessage:
          description: The error message.<br>1 - An internal server error occurred.<br>3
            - The store ID doesn't match the local store.<br>7 - The referenced basket
            has a wrong status.<br>5 - The basket isn't available in the cache anymore.
            Re-send the basket via SendTransactionData.
  ResponseServiceUnavailable:
    allOf:
    - type: object
      required:
      - code
      - errorId
      - errorMessage
      properties:
        code:
          type: integer
          format: int32
          description: The code. Equals HTML status code.<br>400 - Bad request<br>401
            - Unauthorized<br>404 - Not found<br>500 - Internal server error<br>503
            - Server unavailable
          enum:
          - 400
          - 401
          - 404
          - 500
          - 503
        errorId:
          type: integer
          format: int32
          description: The error ID.
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 1001
          - 1002
        errorMessage:
          type: string
          description: The error message.<br>1 - An internal server error occurred.
            (500)<br>2 - Any required input is missing in the request. (400)<br>3
            - The store ID doesn't match the local store. (500)<br>4 - The specified
            clientName isn't allowed to send requests. (401)<br>5 - The basket isn't
            available in the cache anymore. Re-send the basket via SendTransactionData.
            (500)<br>6 - The Webservice is blocked via 'End of day' handling. (503)<br>7
            - The referenced basket has a wrong status. (500)<br>8 - The specified
            barcodes list is empty. (400)<br>9 - Access denied. (401)<br>10 - The
            format of any input value is invalid. (400)<br>11 - The specified sales
            area is not supported. (400)<br>12 - The specified sales condition is
            not supported. (400)<br>13 - The specified basket GUID is unknown. (400)<br>14
            - The totals and sum of used payment tender amounts are inconsistent.
            (400)<br>15 - Any of the specified payment tenders is not supported. (400)<br>16
            - Payment tender verification failed. (400)<br>17 - The specified reasonCode
            is not valid. (400)<br>18 - The specified paymentStatus is not valid.
            (400)<br>1001 - External payment is not allowed for this basket. (400)<br>1002
            - An external void receipt isn’t allowed for this basket. (400)
      description: The response. Code equals HTML status code. Contains additional
        error ID and server logic dependent status/error messages.
    - properties:
        code:
          description: The code. Equals HTML status code.<br>503 - Service unavailable
        errorId: []
        errorMessage:
          description: The error message.<br>6 - The Webservice is blocked via 'End
            of day' handling.
  BasketRequestIPOS:
    description: ""
    type: object
    properties:
      clientId:
        type: string
      workflow:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      salesArea:
        type: string
      salesCondition:
        type: string
      externalTransactionId:
        type: string
      barcodes:
        type: array
        items:
          properties:
            barcode:
              type: string
            quantity:
              type: number
          type: object
    example: |-
      {
        "clientId":"storeapp_v2",
        "workflow":"send-transaction-data",
        "clientName":"StoreApp_WS",
        "languageCulture":"de-DE",
        "consumer":"ABCD",
        "contract":"12345",
        "storeId":"345",
        "salesArea":"BISTRO",
        "salesCondition":"TAKEAWAY",
        "externalTransactionId":"762357625765",
        "barcodes": [{"barcode": "6275980120150907113","quantity": 1},{"barcode":
      "20116735","quantity": 2},{"barcode": "40331244","quantity": 1}]
      }
  OrderResponseIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
      errorMessage:
        type: string
      transactionGuid:
        type: string
      currencyCode:
        type: string
      total:
        type: number
      discount:
        type: number
      familyPriceSavings:
        type: number
      itemDetails:
        type: array
        items:
          properties:
            barcode:
              type: string
            description:
              type: string
            quantity:
              type: number
            total:
              type: number
            id:
              type: number
            parentId:
              type: number
            usedUnitPrice:
              type: number
            orderNumber:
              type: string
            totalBeforeDiscount:
              type: number
            discount:
              type: number
            discountList:
              type: array
              items:
                properties:
                  description:
                    type: string
                  amount:
                    type: number
                  isPartOfTotalDiscount:
                    type: boolean
                type: object
            unitOfMeasureName:
              type: string
          type: object
      totalDiscountDetails:
        type: array
        items:
          properties:
            description:
              type: string
            amount:
              type: number
          type: object
      skippedBarcodes:
        type: array
        items:
          properties:
            barcode:
              type: string
            reasonId:
              type: number
            reasonMessage:
              type: string
          type: object
      externalPaymentAllowed:
        type: boolean
      externalPaymentNotAllowedReasons:
        type: array
        items:
          properties:
            reasonId:
              type: number
            reasonMessage:
              type: string
          type: object
      iSellOrders:
        type: array
        items:
          properties:
            id:
              type: number
            orderNumber:
              type: string
            orderType:
              type: string
          type: object
    example: '{"result":"SUCCESS","errorId":0,"errorMessage":"The Webservice is   blocked
      via ''End of day'' handling","transactionGuid":"AB02EE5A-4895-467B-AF47-04C00644770B","currencyCode":"RMB","total":50.83,"discount":-8.97,"familyPriceSavings":0,"itemDetails":[{"barcode":"20116735","description":"KÖTTBULLAR","quantity":2,"total":50.83,"ID":5,"parentId":0,"usedUnitPrice":29.9,"totalBeforeDiscount":59.8,"discount":-8.97,"discountList":[{"description":"15%
      line discount","amount":-8.97,"isPartOfTotalDiscount":false}],"unitOfMeasureName":"EA"}],"totalDiscountDetails":[{"description":"TestTotal","amount":-5}],"skippedBarcodes":[{"barcode":"90232194","reasonId":4,"reasonMessage":"This
      item is not allowed to be sold."}],"externalPaymentAllowed":false,"externalPaymentNotAllowedReasons":[{"reasonId":1,"reasonMessage":"Any
      item(s) of the basket couldn''t be processed."}]}'
  OrderIdRequestIPOS:
    description: ""
    type: object
    properties:
      clientId:
        type: string
      workflow:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      transactionGuid:
        type: string
      salesArea:
        type: string
      salesCondition:
        type: string
      platform:
        type: string
      device:
        type: string
      appOS:
        type: string
      channel:
        type: string
      journey:
        type: string
      externalTransactionId:
        type: string
      notifications:
        type: array
        items:
          type: object
          required:
          - type
          - dataVariant
          - data
          properties:
            type:
              type: string
            dataVariant:
              type: string
            data:
              type: string
      barcodes:
        type: array
        items:
          properties:
            barcode:
              type: string
            quantity:
              type: number
          type: object
    example: |-
      {
        "clientId":"storeapp_v2",
        "workflow":"send-transaction-data",
        "clientName":"StoreApp_WS",
        "languageCulture":"de-DE",
        "consumer":"ABCD",
        "contract":"12345",
        "storeId":"345",
        "transactionGuid":"AB02EE5A-4895-467B-AF47-04C00644770B",
        "salesArea":"BISTRO",
        "salesCondition":"TAKEAWAY",
        "externalTransactionId":"762357625765",
        "barcodes": [{"barcode": "6275980120150907113","quantity": 1},{"barcode":
      "20116735","quantity": 2},{"barcode": "40331244","quantity": 1}]
      }
  ResponseSuccessIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
    example: '{"result":"SUCCESS","errorId":0}'
  OrderCompletionsResponseIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
      externalPaymentAllowed:
        type: boolean
      total:
        type: number
      transactionBarcode:
        type: number
      availablePaymentTenders:
        type: array
        items:
          properties:
            externalId:
              type: string
            description:
              type: string
          type: object
      externalPaymentNotAllowedReasons:
        type: array
        items:
          properties:
            reasonId:
              type: number
            reasonMessage:
              type: string
          type: object
    example: |-
      {
        "result": "SUCCESS",
        "errorId": 0,
        "externalPaymentAllowed": true,
        "total": 50.83,
        "transactionBarcode": 77034500020907210917,
        "availablePaymentTenders": [
          {
            "externalId": "CHARGE3",
            "description": "WECHATPAY"
          },
          {
            "externalId": "CHARGE4",
            "description": "WECHAT Coupon"
          }
        ],
        "externalPaymentNotAllowedReasons": [
      {
            "reasonId": 1,
            "reasonMessage": "Any item(s) of the basket couldn't be processed."
          }
      ]
      }
  PaymentConfirmationRequestIPOS:
    description: ""
    type: object
    properties:
      clientId:
        type: string
      workflow:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      transactionGuid:
        type: string
      paymentStatus:
        type: string
      total:
        type: number
      paymentDetails:
        type: array
        items:
          properties:
            externalId:
              type: string
            additionalInfoValue:
              type: string
            amount:
              type: number
            verifications:
              type: array
              items:
                properties:
                  name:
                    type: string
                  value:
                    type: string
                type: object
          type: object
    example: "{\n\t\"clientId\": \"storeapp_v2\",\n\t\"workflow\": \"inform-external-payment-result\",\n\t\"clientName\":
      \"StoreApp_WS\",\n\t\"languageCulture\": \"en-CN\",\n\t\"consumer\": \"ABCD\",\n\t\"contract\":
      \"12345\",\n\t\"storeId\": \"345\",\n     \"transactionGuid\":\"03D6BE15-1C2D-4515-B938-89A61E31E636\",\n\t\"paymentStatus\":
      \"PAID\",\n\t\"total\": 53.21,\n\t\"paymentDetails\": [\n\t\t{\n\t\t\t\"externalId\":
      \"CHARGE3\",\n\t\t\t\"additionalInfoValue\": \"\",\n\t\t\t\"amount\": 23.21,\n\t\t\t\"verifications\":
      [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"ExternalOrderId\",\n\t\t\t\t\t\"value\":
      \"HJdf64dHD634nf47\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"externalId\":
      \"CHARGE4\",\n\t\t\t\"additionalInfoValue\": \"dfgjh;dhfdhf;djfkdgf\",\n\t\t\t\"amount\":
      30,\n\t\t\t\"verifications\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"ExternalOrderId\",\n\t\t\t\t\t\"value\":
      \"HJdf64dHD634nf47\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"CouponReference\",\n\t\t\t\t\t\"value\":
      \"HJd6456Gf376Db376\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
  PaymentConfirmResponseIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
      kdsOrderId:
        type: string
      printBuffer:
        type: string
      issuedCoupons:
        type: array
        items:
          properties:
            barcode:
              type: string
            message:
              type: string
          type: object
    example: '{"result":"SUCCESS","errorId":0,"kdsOrderId":"KdsOrderIdExample","issuedCoupons":[{"barcode":"0123456789","message":"Some
      issued coupon"}], "printBuffer":"ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KV2VsY29tZSB0byBJS0VBIFBPUyBVcGdyYWRlISAgICAgICAgICAgIA0KUsO2bm5vd3NnYXRhbiAxLCAyNTIgMjUgSGVsc2luZ2JvcmcgICAgICANCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCk9wZW4gYWxsIHdlZWsgMTAtMjAgICAgICAgICAgICAgICAgICAgICANCiAg5a6c5a625Lya5ZGY5Y2h77yaICAgNjI3NTk4MHh4eHh4eHh4NzExMyAgICANCiAg5ZWG5ZOBICAgIDIwMTE2NzM1ICAgICAgICAgICAgICAgICAgICAgIA0KICBLw5ZUVEJVTExBUiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgS8OWVFRCVUxMQVIg55Ge5YW45byP6IKJ5Li4IDUwMOWFiyBDTiAgICAgICAgDQogICAgICAgIDIgICogICAgMjkuOTAgICAgICAgIDU5LjgwICAgICAgDQogICAgMTUlIGxpbmUgZGlzY291bnQgICAgICAgICAgLTguOTcgICAgDQogICAgKFRlc3RUb3RhbCAgICAgICAgICAgICAgIC0xLjUxKSAgICANCiAg5ZWG5ZOBICAgIDQwMzMxMjQ0ICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDExOC4wMCBGICAgIA0KICDlnKPor57oh6rliqnppJAg5aSnICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgIChUZXN0VG90YWwgICAgICAgICAgICAgICAtMy40OSkgICAgDQogIFRlc3RUb3RhbCAgICAgICAgICAgICAgICAgIC01LjAwICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAtLS0tLS0tLS0tLS0tICAgDQogIOWQiOiuoTogICAgICAgICAgICAgICAgICAgICAxNjMuODMgICAgICANCiDmgqjnmoTlkIjorqHlrpzlrrbkvJrlkZjljaEgICAgICAgICAgICAgICAgICAgICANCiDoioLnnIHmmK8gICAgICAgICAgICAgICAgLTUwLjAwICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgUm91bmRpbmcgICAgICAgICAgICAgICAgICAgMC4wMyAgUk1CICANCiAg546w6YeRICAgICAgICAgICAgICAgICAgICAgIDE2My44MCBSTUIgIA0KIOWQq+eoju+8miAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KIOS7o+eggSAgIOeOhyAgICAgICDlh4DlgLwgICAgICAg56iOICAgICAgICAgIA0KICAgICAgICAgNi4wICUgICAgICAxNTQuNTYgICAgICAgIDkuMjcgIA0KIOaUtumTtuWRmOWPtyAgICAgICAgICAgIDEwMDExNCBGb0NhICAgICAgICANCiDml6XmnJ8gICAgIOaXtumXtCAgICAgIOW6l+mTuiAgIFBPUyAg5Lqk5piT5Y+3ICANCiAxOS4wNi4xNyAxNjoxNjo0OSAgICAgMzQ1ICAgMiAgICAgICA0MCANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiBUaGFuayB5b3UgZm9yIHlvdXIgc2hvcHBpbmcgISAgICAgICAgICANCiAtLS0tLS0gT25seSBkZW1vIHJlY2VpcHQtLS0tLS0gICAgICAgICANCiAtPiBQT1MgVXBncmFkZSBEZW1vcmVjZWlwdCA8LSAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgCSAgICAgICAgCQkJCQkgIA0KICAgICAgICAJICAgICAgICAJCQkJCSAgXHh7QmFyLCBQVFJfQkNTX1FSQ09ERSw2LDZ9IGh0dHA6Ly93d3cueGZwbGluay5jbi93eF9vcmRlcl9mb2xsb3dfSUtFQS5odG1sP2luPW8lM2QwMzQ1MDAwMjAwNDAxOTA2MTclMjZiJTNkMzQ1JTI2YSUzZDE2My44MyUyNnAlM2QwMDIlMjZkJTNkMjAxOTA2MTcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KXHh7QmFyLCBQVFJfQkNTX0lURiwyMTAwLDEwMDB9IDAzNDUwMDAyMDA0MDE5MDYxNyAgICAgICAgICAgICAgICAgICAgICAgXHggICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg=="}'
  VoidRecieptResponseIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
      externalVoidReceiptAllowed:
        type: boolean
      total:
        type: number
      availablePaymentTenders:
        type: array
        items:
          properties:
            externalId:
              type: string
            description:
              type: string
          type: object
      availableReasonCodes:
        type: array
        items:
          properties:
            reasonCode:
              type: number
            reasonMessage:
              type: string
          type: object
      externalVoidReceiptNotAllowedReasons:
        type: array
        items:
          properties:
            reasonId:
              type: number
            reasonMessage:
              type: string
          type: object
    example: |-
      {
        "result": "SUCCESS",
        "errorId": 0,
        "externalVoidReceiptAllowed": true,
        "total": -163.83,
        "availablePaymentTenders": [
          {
            "externalId": "CHARGE3",
            "description": "WECHATPAY"
          },
          {
            "externalId": "CHARGE4",
            "description": "WECHAT Coupon"
          }
        ],
        "availableReasonCodes": [
          {
            "reasonCode": 1,
            "reasonMessage": "Customer changed mind"
          },
          {
            "reasonCode": 2,
            "reasonMessage": "Order hasn't been picked up before store closing"
          }
        ],
        "externalVoidReceiptNotAllowedReasons": [
          {
            "reasonId": 2,
            "reasonMessage": "The basket hasn’t been paid externally."
          }
        ]
      }
  ConfirmVoidReceiptRequestIPOS:
    description: ""
    type: object
    properties:
      clientId:
        type: string
      workflow:
        type: string
      clientName:
        type: string
      languageCulture:
        type: string
      consumer:
        type: string
      contract:
        type: string
      storeId:
        type: string
      transactionGuid:
        type: string
      paymentStatus:
        type: string
      total:
        type: number
      reasonCode:
        type: number
      paymentDetails:
        type: array
        items:
          properties:
            externalId:
              type: string
            additionalInfoValue:
              type: string
            amount:
              type: number
            verifications:
              type: array
              items:
                properties:
                  name:
                    type: string
                  value:
                    type: string
                type: object
          type: object
    example: "{\n\t\"clientId\": \"storeapp_v2\",\n\t\"workflow\": \"inform-external-void-receipt-result\",\n\t\"clientName\":
      \"StoreApp_WS\",\n\t\"languageCulture\": \"en-CN\",\n\t\"consumer\": \"ABCD\",\n\t\"contract\":
      \"12345\",\n\t\"storeId\": \"345\",\n\t\"transactionGuid\":\"03D6BE15-1C2D-4515-B938-89A61E31E636\",\n\t\"paymentStatus\":
      \"REFUNDED\",\n\t\"total\": -53.21,\n\t\"reasonCode\":1,\n\t\"paymentDetails\":
      [\n\t\t{\n\t\t\t\"externalId\": \"CHARGE3\",\n\t\t\t\"additionalInfoValue\":
      \"\",\n\t\t\t\"amount\": -23.21,\n\t\t\t\"verifications\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\":
      \"ExternalOrderId\",\n\t\t\t\t\t\"value\": \"HJdf64dHD634nf47\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"externalId\":
      \"CHARGE4\",\n\t\t\t\"additionalInfoValue\": \"dfgjh;dhfdhf;djfkdgf\",\n\t\t\t\"amount\":
      -30,\n\t\t\t\"verifications\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"ExternalOrderId\",\n\t\t\t\t\t\"value\":
      \"HJdf64dHD634nf47\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"CouponReference\",\n\t\t\t\t\t\"value\":
      \"HJd6456Gf376Db376\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
  ErrorResponseIPOS:
    description: ""
    type: object
    properties:
      result:
        type: string
      errorId:
        type: number
      errorMessage:
        type: string
    example: '{"result":"ERROR","errorId":4,"errorMessage":"The specified    clientName
      isn''t allowed to    send requests."}'
x-ibm-configuration:
  enforced: true
  testable: true
  phase: realized
schemes:
- https
x-ibm-endpoints:
- endpointUrl: https://api.ingka.ikea.com
  description: GCP Endpoint
  type:
  - production
  - development
...
